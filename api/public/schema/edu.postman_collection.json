{
	"info": {
		"_postman_id": "52fb26dc-ff1d-4f66-b6af-9296ee57911d",
		"name": "Education Component",
		"description": "    API Details\r\n    - Component: Education Component\r\n    - Reference: edu\r\n    - Enviroment: dev\r\n    - Version: V.0.1\r\n    - Repository: [online](https://github.com/ConductionNL/education-component) / [zip](https://github.com/ConductionNL/education-component/archive/master.zip)\r\n    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/edu-php) \r\n    - Datamodel: [postman](/schema/edu.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [modelio (zip)](/schema/Datamodel_Modelio.zip) \r\n    \r\n    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.' ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "participants",
			"item": [
				{
					"name": "Retrieves the collection of Participant resources.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b985fdde-15a7-4c15-85cb-eccb3b9e101d",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "The JWT of the entity performing the request",
								"key": "Authorization",
								"type": "text",
								"value": ""
							},
							{
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)",
								"key": "API-Version",
								"type": "text",
								"value": ""
							},
							{
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network.",
								"key": "X-NLX-Logrecord-ID",
								"type": "text",
								"value": ""
							},
							{
								"description": "A process id for purpose registration (doelbinding)",
								"key": "X-NLX-Request-Process-Id",
								"type": "text",
								"value": ""
							},
							{
								"description": "A list of requested data elements",
								"key": "X-NLX-Request-Data-Elements",
								"type": "text",
								"value": ""
							},
							{
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`",
								"key": "X-NLX-Request-Data-Subject",
								"type": "text",
								"value": ""
							},
							{
								"description": "A clarification as to why a request has been made  (doelbinding)",
								"key": "X-NLX-Audit-Clarification",
								"type": "text",
								"value": ""
							},
							{
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\"",
								"key": "Link",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/participants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participants"
							]
						}
					},
					"response": []
				},
				{
					"name": "Creates a Participant resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc0ece44-4ce1-421d-afa9-1ea1b4877848",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    // pm.response.to.be.created; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});\r",
									"\r",
									"pm.test(\"Set ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"    //var payloadData = JSON.parse(jsonData.Payload); //parsed payload\r",
									"\r",
									"    //console.log(payloadData.Id);\r",
									"\r",
									"    pm.environment.set(\"participant\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"person\": \"https://cc.conduction.nl/people\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/participants",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participants"
							]
						}
					},
					"response": [
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Challenge resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "participants/{id}",
			"item": [
				{
					"name": "Retrieves a Participant resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "edc7984a-adea-4a06-b33b-8d1e9ef08dd3",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/participants/{{participant}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participants",
								"{{participant}}"
							]
						}
					},
					"response": [
						{
							"name": "Challenge resource response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/challenges/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/challenges/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Replaces the Participant resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ad29061-eded-40eb-bdae-87726ff1ca95",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "The JWT of the entity performing the request",
								"key": "Authorization",
								"value": ""
							},
							{
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)",
								"key": "API-Version",
								"value": ""
							},
							{
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network.",
								"key": "X-NLX-Logrecord-ID",
								"value": ""
							},
							{
								"description": "A process id for purpose registration (doelbinding)",
								"key": "X-NLX-Request-Process-Id",
								"value": ""
							},
							{
								"description": "A list of requested data elements",
								"key": "X-NLX-Request-Data-Elements",
								"value": ""
							},
							{
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`",
								"key": "X-NLX-Request-Data-Subject",
								"value": ""
							},
							{
								"description": "A clarification as to why a request has been made  (doelbinding)",
								"key": "X-NLX-Audit-Clarification",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"courses\": \n    [\n        \"https://edu.dev.conduction.nl/courses/4bb8034c-2f74-4637-801d-9c2c0cb43b92\"\n    ]\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/participants/{{participant}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"participants",
								"{{participant}}"
							]
						}
					},
					"response": [
						{
							"name": "Challenge resource updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "results",
			"item": [
				{
					"name": "Retrieves the collection of Result resources.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a70a6b9b-2196-455a-8d7c-50cf616b97a0",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request",
								"type": "text"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)",
								"type": "text"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network.",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`",
								"type": "text"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/results",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"results"
							]
						}
					},
					"response": []
				},
				{
					"name": "Creates a Result resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78368a95-f906-4c9a-957e-09fb4254fa50",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    // pm.response.to.be.created; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});\r",
									"\r",
									"pm.test(\"Set ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"    //var payloadData = JSON.parse(jsonData.Payload); //parsed payload\r",
									"\r",
									"    //console.log(payloadData.Id);\r",
									"\r",
									"    pm.environment.set(\"result\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Result1\",\n    \"description\": \"Beschrijving van Result1.\",\n    \"participant\": \"{{baseUrl}}/participants/{{participant}}\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/results",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"results"
							]
						}
					},
					"response": [
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Challenge resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3df0ad33-7260-4224-9345-47715c71f8d9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1057affd-5d00-4572-90ce-e5bac467c564",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "results/{id}",
			"item": [
				{
					"name": "Retrieves a Result resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9dbe5b6b-0b8c-4ddb-ac37-dccd8f6914c8",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/results/{{result}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"results",
								"{{result}}"
							]
						}
					},
					"response": [
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/challenges/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Challenge resource response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/challenges/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Replaces the Result resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "19adf6b3-4e4a-4743-b347-d43ddb76b1fa",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "The JWT of the entity performing the request",
								"key": "Authorization",
								"value": ""
							},
							{
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)",
								"key": "API-Version",
								"value": ""
							},
							{
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network.",
								"key": "X-NLX-Logrecord-ID",
								"value": ""
							},
							{
								"description": "A process id for purpose registration (doelbinding)",
								"key": "X-NLX-Request-Process-Id",
								"value": ""
							},
							{
								"description": "A list of requested data elements",
								"key": "X-NLX-Request-Data-Elements",
								"value": ""
							},
							{
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`",
								"key": "X-NLX-Request-Data-Subject",
								"value": ""
							},
							{
								"description": "A clarification as to why a request has been made  (doelbinding)",
								"key": "X-NLX-Audit-Clarification",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Result1\",\n    \"description\": \"Beschrijving van Result1!\",\n    \"participant\": \"{{baseUrl}}/participants/{{participant}}\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/results/{{result}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"results",
								"{{result}}"
							]
						}
					},
					"response": [
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Challenge resource updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4747f21e-eb76-448d-aeca-33425b7960a5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "57e02217-b1eb-4028-8ac8-3824a0544074",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "reviews",
			"item": [
				{
					"name": "Retrieves the collection of Review resources.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f591fe8c-c6a1-4c1b-b558-86b4e2355912",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request",
								"type": "text"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)",
								"type": "text"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network.",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`",
								"type": "text"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Creates a Review resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "836df8f6-c903-4424-bc05-3468267000c9",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    // pm.response.to.be.created; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});\r",
									"\r",
									"pm.test(\"Set ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"    //var payloadData = JSON.parse(jsonData.Payload); //parsed payload\r",
									"\r",
									"    //console.log(payloadData.Id);\r",
									"\r",
									"    pm.environment.set(\"review\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Review1\",\n    \"description\": \"Beschrijving van Review1.\",\n    \"result\": \"{{baseUrl}}/results/{{result}}\",\n    \"body\": \"Dit is de body van Review1.\",\n    \"rating\": 8\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reviews"
							]
						}
					},
					"response": [
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Challenge resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a92753af-06c8-463b-a204-2120934e18ba",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "91b77109-6044-4dde-9363-4fa670f04b11",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "reviews/{id}",
			"item": [
				{
					"name": "Retrieves a Review resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c42e9ee2-5f4d-4d9a-bd3d-2b486a620c2f",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/reviews/{{review}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reviews",
								"{{review}}"
							]
						}
					},
					"response": [
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/challenges/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Challenge resource response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/challenges/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Replaces the Review resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b73f4cae-b1b2-40e4-90e8-fa5640fe08b8",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "The JWT of the entity performing the request",
								"key": "Authorization",
								"value": ""
							},
							{
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)",
								"key": "API-Version",
								"value": ""
							},
							{
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network.",
								"key": "X-NLX-Logrecord-ID",
								"value": ""
							},
							{
								"description": "A process id for purpose registration (doelbinding)",
								"key": "X-NLX-Request-Process-Id",
								"value": ""
							},
							{
								"description": "A list of requested data elements",
								"key": "X-NLX-Request-Data-Elements",
								"value": ""
							},
							{
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`",
								"key": "X-NLX-Request-Data-Subject",
								"value": ""
							},
							{
								"description": "A clarification as to why a request has been made  (doelbinding)",
								"key": "X-NLX-Audit-Clarification",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Review1\",\n    \"description\": \"Beschrijving van Review1!\",\n    \"result\": \"{{baseUrl}}/results/{{result}}\",\n    \"body\": \"Dit is de body van Review1?\",\n    \"rating\": 6\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reviews/{{review}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reviews",
								"{{review}}"
							]
						}
					},
					"response": [
						{
							"name": "Challenge resource updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9ab4c5ea-ac88-44f7-a12c-a6a019b4bc81",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a02c7e8f-b630-4526-8384-daf374484807",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "courses",
			"item": [
				{
					"name": "Retrieves the collection of Course resources.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d0b9e5e-ad93-446c-b543-64bf90f1fb61",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request",
								"type": "text"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)",
								"type": "text"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network.",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`",
								"type": "text"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/courses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"courses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Creates a Course resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9ec3923-4e40-4851-9647-bcb975a24eb4",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    // pm.response.to.be.created; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});\r",
									"\r",
									"pm.test(\"Set ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"    //var payloadData = JSON.parse(jsonData.Payload); //parsed payload\r",
									"\r",
									"    //console.log(payloadData.Id);\r",
									"\r",
									"    pm.environment.set(\"course\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"TEST12345\",\n    \"description\": \"TEST12345\",\n    \"courseCode\": \"TEST12345\",\n    \"coursePrerequisites\": [\n        \"https://edu.dev.conduction.nl/courses/4bb8034c-2f74-4637-801d-9c2c0cb43b92\"\n    ],\n    \"hasCourseInstance\": \"{{baseUrl}}/courses\",\n    \"numberOfCredits\": 0,\n    \"occupationalCredentialAwarded\": \"Beschrijving van wat je krijgt bij het halen van deze cursus, bijvoorbeeld een certificaat.\",\n    \"educationalCredentialAwarded\": \"Beschrijving van wat je krijgt bij het halen van deze cursus, bijvoorbeeld een certificaat.\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/courses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"courses"
							]
						}
					},
					"response": [
						{
							"name": "Challenge resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "courses/{id}",
			"item": [
				{
					"name": "Retrieves a Course resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "abddf386-bbfe-40ab-b795-767c3a816bfa",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/courses/{{course}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"courses",
								"{{course}}"
							]
						}
					},
					"response": [
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/challenges/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Challenge resource response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/challenges/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Replaces the Course resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06528b50-186f-4727-bf25-1a273b951191",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "The JWT of the entity performing the request",
								"key": "Authorization",
								"value": ""
							},
							{
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)",
								"key": "API-Version",
								"value": ""
							},
							{
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network.",
								"key": "X-NLX-Logrecord-ID",
								"value": ""
							},
							{
								"description": "A process id for purpose registration (doelbinding)",
								"key": "X-NLX-Request-Process-Id",
								"value": ""
							},
							{
								"description": "A list of requested data elements",
								"key": "X-NLX-Request-Data-Elements",
								"value": ""
							},
							{
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`",
								"key": "X-NLX-Request-Data-Subject",
								"value": ""
							},
							{
								"description": "A clarification as to why a request has been made  (doelbinding)",
								"key": "X-NLX-Audit-Clarification",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Werken met scrum en Github\",\n    \"description\": \"Deze cursus leert je de basics van werken met scrum en Github.\",\n    \"courseCode\": \"SG123\",\n    \"coursePrerequisites\": [\n        \"https://edu.dev.conduction.nl/courses/4bb8034c-2f74-4637-801d-9c2c0cb43b92\"\n    ],\n    \"hasCourseInstance\": \"{{baseUrl}}/courses\",\n    \"numberOfCredits\": 6,\n    \"occupationalCredentialAwarded\": \"Beschrijving van wat je krijgt bij het halen van deze cursus, bijvoorbeeld een certificaat.\",\n    \"educationalCredentialAwarded\": \"Beschrijving van wat je krijgt bij het halen van deze cursus, bijvoorbeeld een certificaat.\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/courses/{{course}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"courses",
								"{{course}}"
							]
						}
					},
					"response": [
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Challenge resource updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "activities",
			"item": [
				{
					"name": "Retrieves the collection of Activity resources.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0cc1ff0d-a4f1-48ad-a1ee-693b344afd2e",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "The JWT of the entity performing the request",
								"key": "Authorization",
								"type": "text",
								"value": ""
							},
							{
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)",
								"key": "API-Version",
								"type": "text",
								"value": ""
							},
							{
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network.",
								"key": "X-NLX-Logrecord-ID",
								"type": "text",
								"value": ""
							},
							{
								"description": "A process id for purpose registration (doelbinding)",
								"key": "X-NLX-Request-Process-Id",
								"type": "text",
								"value": ""
							},
							{
								"description": "A list of requested data elements",
								"key": "X-NLX-Request-Data-Elements",
								"type": "text",
								"value": ""
							},
							{
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`",
								"key": "X-NLX-Request-Data-Subject",
								"type": "text",
								"value": ""
							},
							{
								"description": "A clarification as to why a request has been made  (doelbinding)",
								"key": "X-NLX-Audit-Clarification",
								"type": "text",
								"value": ""
							},
							{
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\"",
								"key": "Link",
								"type": "text",
								"value": ""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities"
							]
						}
					},
					"response": []
				},
				{
					"name": "Creates a Activity resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3675ab2-8f24-47fb-b9d1-9f6263182123",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    // pm.response.to.be.created; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});\r",
									"\r",
									"pm.test(\"Set ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"    //var payloadData = JSON.parse(jsonData.Payload); //parsed payload\r",
									"\r",
									"    //console.log(payloadData.Id);\r",
									"\r",
									"    pm.environment.set(\"activity\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Activity1\",\n    \"description\": \"Beschrijving van Activity1.\",\n    \"educationalUse\": \"educationalUse\",\n    \"course\": \"{{baseUrl}}/courses/{{course}}\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/activities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities"
							]
						}
					},
					"response": [
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Challenge resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "activities/{id}",
			"item": [
				{
					"name": "Retrieves a Activity resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "92b37709-90c5-429a-8c36-8aa7949696f9",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activities/{{activity}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities",
								"{{activity}}"
							]
						}
					},
					"response": [
						{
							"name": "Challenge resource response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/challenges/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/challenges/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Replaces the Activity resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee16d4ef-30b3-4019-952b-f8f0a319f622",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "The JWT of the entity performing the request",
								"key": "Authorization",
								"value": ""
							},
							{
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)",
								"key": "API-Version",
								"value": ""
							},
							{
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network.",
								"key": "X-NLX-Logrecord-ID",
								"value": ""
							},
							{
								"description": "A process id for purpose registration (doelbinding)",
								"key": "X-NLX-Request-Process-Id",
								"value": ""
							},
							{
								"description": "A list of requested data elements",
								"key": "X-NLX-Request-Data-Elements",
								"value": ""
							},
							{
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`",
								"key": "X-NLX-Request-Data-Subject",
								"value": ""
							},
							{
								"description": "A clarification as to why a request has been made  (doelbinding)",
								"key": "X-NLX-Audit-Clarification",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Activity1\",\n    \"description\": \"Beschrijving van Activity1!\",\n    \"educationalUse\": \"educationalUse?\",\n    \"course\": \"{{baseUrl}}/courses/{{course}}\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/activities/{{activity}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities",
								"{{activity}}"
							]
						}
					},
					"response": [
						{
							"name": "Challenge resource updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "education events",
			"item": [
				{
					"name": "Retrieves the collection of EducationEvent resources.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "427f44c5-144b-468b-b98c-254367da380d",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request",
								"type": "text"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)",
								"type": "text"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network.",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`",
								"type": "text"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/education_events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"education_events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Creates a EducationEvent resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f414a8ef-8415-47de-852d-47e9b533cac5",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    // pm.response.to.be.created; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});\r",
									"\r",
									"pm.test(\"Set ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"    //var payloadData = JSON.parse(jsonData.Payload); //parsed payload\r",
									"\r",
									"    //console.log(payloadData.Id);\r",
									"\r",
									"    pm.environment.set(\"education_event\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"name\": \"Les 1 over Github\",\n\"description\": \"Dit is de eerste online les over Github.\",\n\"assesses\": \"beoordelingscriteria\",\n\"educationalLevel\": \"beginner\",\n\"teaches\": \"In deze eerste les zal je de basics leren van Github zoals het clonen van en repository.\",\n\"startDate\": \"2020-07-13T13:00:00Z\",\n\"endDate\": \"2020-07-13T15:00:00Z\",\n\"course\": \"/courses/{{course}}\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/education_events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"education_events"
							]
						}
					},
					"response": [
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Challenge resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5998297c-e419-44e8-baf3-96fb74a452fa",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ca555d90-a105-4fdc-a56c-0b3542266492",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "education events/{id}",
			"item": [
				{
					"name": "Retrieves a EducationEvent resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73c5b093-0a80-4347-8933-ade8a4b34c0e",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/education_events/{{education_event}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"education_events",
								"{{education_event}}"
							]
						}
					},
					"response": [
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/challenges/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Challenge resource response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/challenges/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Replaces the EducationEvent resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0f64ed6-3375-4097-a013-a921b48f7118",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"name\": \"Les 2 over Github\",\n\"description\": \"Dit is de eerste online les over Github.\",\n\"assesses\": \"beoordelingscriteria\",\n\"educationalLevel\": \"advanced\",\n\"teaches\": \"In deze eerste les zal je de basics leren van Github zoals het clonen van en repository.\",\n\"startDate\": \"2020-07-13T13:00:00Z\",\n\"endDate\": \"2020-07-13T15:00:00Z\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/education_events/{{education_event}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"education_events",
								"{{education_event}}"
							]
						}
					},
					"response": [
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Challenge resource updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "19ff7c27-238c-4fb2-9992-3619c75dfeaf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b620f893-190f-46ac-9538-3b03f55503f1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "programs",
			"item": [
				{
					"name": "Retrieves the collection of Program resources.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d56aa61-4b10-4996-98e2-7567fa1bebf4",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request",
								"type": "text"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)",
								"type": "text"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network.",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements",
								"type": "text"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`",
								"type": "text"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/programs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"programs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Creates a Program resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "513f33a5-9b80-4acf-95c2-a9d94b781f25",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    // pm.response.to.be.created; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});\r",
									"\r",
									"pm.test(\"Set ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"    //var payloadData = JSON.parse(jsonData.Payload); //parsed payload\r",
									"\r",
									"    //console.log(payloadData.Id);\r",
									"\r",
									"    pm.environment.set(\"program\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "The JWT of the entity performing the request",
								"key": "Authorization",
								"value": ""
							},
							{
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)",
								"key": "API-Version",
								"value": ""
							},
							{
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network.",
								"key": "X-NLX-Logrecord-ID",
								"value": ""
							},
							{
								"description": "A process id for purpose registration (doelbinding)",
								"key": "X-NLX-Request-Process-Id",
								"value": ""
							},
							{
								"description": "A list of requested data elements",
								"key": "X-NLX-Request-Data-Elements",
								"value": ""
							},
							{
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`",
								"key": "X-NLX-Request-Data-Subject",
								"value": ""
							},
							{
								"description": "A clarification as to why a request has been made  (doelbinding)",
								"key": "X-NLX-Audit-Clarification",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"associate degree informatica\",\n    \"description\": \"Deze studie leert je in 2 jaar tijd informatica skills op HBO denkniveau.\",\n    \"applicationStartDate\": \"2020-07-13T12:00:00Z\",\n    \"applicationDeadline\": \"2020-09-25T20:00:00Z\",\n    \"startDate\": \"2020-09-25T13:00:00Z\",\n    \"endDate\": \"2022-09-25T15:00:00Z\",\n    \"financialAidEligible\": \"Een beschrijving of verwijzing naar een programma voor financiële steun dat studenten kunnen gebruiken om het collegegeld of de kosten voor het programma te betalen.\",\n    \"maximumEnrollment\": 100,\n    \"numberOfCredits\": 120,\n    \"occupationalCategory\": \"HBO\",\n    \"occupationalCredentialAwarded\": \"Beschrijving van wat je krijgt bij het halen van deze studie, bijvoorbeeld een diploma.\",\n    \"educationalCredentialAwarded\": \"Beschrijving van wat je krijgt bij het halen van deze studie, bijvoorbeeld een diploma.\",\n    \"educationalProgramMode\": \"full-time\",\n    \"offers\": \"https://pdc.conduction.nl/offers\",\n    \"programPrerequisites\": [\n        \"https://edu.dev.conduction.nl/courses/4bb8034c-2f74-4637-801d-9c2c0cb43b92\",\n        \"https://edu.dev.conduction.nl/courses/0bf92c4a-0ef3-4184-a14a-4356f735498e\"\n    ],\n    \"programType\": \"classroom, internship.\",\n    \"provider\": \"https://wrc.conduction.nl/organizations\",\n    \"salaryUponCompletion\": \"€1000\",\n    \"termDuration\": \"2 maanden\",\n    \"termsPerYear\": 4,\n    \"dayOfWeek\": \"van maandag tot zondag\",\n    \"timeOfDay\": \"Overdag, soms in de avond\",\n    \"timeToComplete\": \"2 jaar\",\n    \"trainingSalary\": \"€300 per maand\",\n    \"typicalCreditsPerTerm\": 15\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/programs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"programs"
							]
						}
					},
					"response": [
						{
							"name": "Challenge resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "programs/{id}",
			"item": [
				{
					"name": "Retrieves a Program resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b75cb86-eb2c-473d-82f6-25ca6e776ce5",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/programs/{{program}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"programs",
								"{{program}}"
							]
						}
					},
					"response": [
						{
							"name": "Challenge resource response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/challenges/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/challenges/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Replaces the Program resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f42c8a8-932a-47c4-8258-69a8a4a6b832",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"    // assert that the status code is 200\r",
									"    pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"    // assert that the response has a valid JSON body\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"description": "The JWT of the entity performing the request",
								"key": "Authorization",
								"value": ""
							},
							{
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)",
								"key": "API-Version",
								"value": ""
							},
							{
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network.",
								"key": "X-NLX-Logrecord-ID",
								"value": ""
							},
							{
								"description": "A process id for purpose registration (doelbinding)",
								"key": "X-NLX-Request-Process-Id",
								"value": ""
							},
							{
								"description": "A list of requested data elements",
								"key": "X-NLX-Request-Data-Elements",
								"value": ""
							},
							{
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`",
								"key": "X-NLX-Request-Data-Subject",
								"value": ""
							},
							{
								"description": "A clarification as to why a request has been made  (doelbinding)",
								"key": "X-NLX-Audit-Clarification",
								"value": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"applicationDeadline\": \"2020-08-27T7:00:00Z\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/programs/d7c49d9f-5e16-4035-8558-9b2aa007aabe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"programs",
								"d7c49d9f-5e16-4035-8558-9b2aa007aabe"
							]
						}
					},
					"response": [
						{
							"name": "Challenge resource updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<string>\",\n \"description\": \"<string>\",\n \"catchPhrase\": \"<string>\",\n \"dateClose\": \"<dateTime>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"submitters\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"pitches\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<string>\",\n   \"description\": \"<string>\",\n   \"dateSubmitted\": \"<dateTime>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"challenge\": {\n    \"value\": \"<Circular reference to #/components/schemas/Challenge:jsonld-read detected>\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"catchPhrase\": \"<string>\",\n    \"dateClose\": \"<dateTime>\",\n    \"submitters\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"pitches\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"dateSubmitted\": \"<dateTime>\",\n            \"challenge\": {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"catchPhrase\": \"<string>\",\n                \"dateClose\": \"<dateTime>\",\n                \"submitters\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"pitches\": [\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    },\n                    {\n                        \"value\": \"<Circular reference to #/components/schemas/Pitch-write detected>\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/challenges/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"challenges",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "tests",
			"item": [
				{
					"name": "Retrieves the collection of Test resources.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "42ffb44c-9042-42ca-9bec-a679053d0fd2",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages"
							]
						}
					},
					"response": [
						{
							"name": "Stage collection response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages?start=<boolean>&order[id]=<string>&order[name]=<string>&order[description]=<string>&order[icon]=<string>&order[options]=<string>&order[validation]=<string>&order[property]=<string>&order[slug]=<string>&order[start]=<string>&order[dateCreated]=<string>&order[dateModified]=<string>&dateCreated[before]=<string>&dateCreated[strictly_before]=<string>&dateCreated[after]=<string>&dateCreated[strictly_after]=<string>&dateModified[before]=<string>&dateModified[strictly_before]=<string>&dateModified[after]=<string>&dateModified[strictly_after]=<string>&id=<string>&id[]=<string>&id[]=<string>&name=<string>&name[]=<string>&name[]=<string>&description=<string>&description[]=<string>&description[]=<string>&icon=<string>&icon[]=<string>&icon[]=<string>&options=<string>&options[]=<string>&options[]=<string>&validation=<string>&validation[]=<string>&validation[]=<string>&property=<string>&property[]=<string>&property[]=<string>&slug=<string>&slug[]=<string>&slug[]=<string>&start=<boolean>&start[]=<boolean>&start[]=<boolean>&dateCreated=<string>&dateCreated[]=<string>&dateModified=<string>&dateModified[]=<string>&page=1&extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									],
									"query": [
										{
											"key": "start",
											"value": "<boolean>"
										},
										{
											"key": "order[id]",
											"value": "<string>"
										},
										{
											"key": "order[name]",
											"value": "<string>"
										},
										{
											"key": "order[description]",
											"value": "<string>"
										},
										{
											"key": "order[icon]",
											"value": "<string>"
										},
										{
											"key": "order[options]",
											"value": "<string>"
										},
										{
											"key": "order[validation]",
											"value": "<string>"
										},
										{
											"key": "order[property]",
											"value": "<string>"
										},
										{
											"key": "order[slug]",
											"value": "<string>"
										},
										{
											"key": "order[start]",
											"value": "<string>"
										},
										{
											"key": "order[dateCreated]",
											"value": "<string>"
										},
										{
											"key": "order[dateModified]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[before]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[strictly_before]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[after]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[strictly_after]",
											"value": "<string>"
										},
										{
											"key": "dateModified[before]",
											"value": "<string>"
										},
										{
											"key": "dateModified[strictly_before]",
											"value": "<string>"
										},
										{
											"key": "dateModified[after]",
											"value": "<string>"
										},
										{
											"key": "dateModified[strictly_after]",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "id[]",
											"value": "<string>"
										},
										{
											"key": "id[]",
											"value": "<string>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "name[]",
											"value": "<string>"
										},
										{
											"key": "name[]",
											"value": "<string>"
										},
										{
											"key": "description",
											"value": "<string>"
										},
										{
											"key": "description[]",
											"value": "<string>"
										},
										{
											"key": "description[]",
											"value": "<string>"
										},
										{
											"key": "icon",
											"value": "<string>"
										},
										{
											"key": "icon[]",
											"value": "<string>"
										},
										{
											"key": "icon[]",
											"value": "<string>"
										},
										{
											"key": "options",
											"value": "<string>"
										},
										{
											"key": "options[]",
											"value": "<string>"
										},
										{
											"key": "options[]",
											"value": "<string>"
										},
										{
											"key": "validation",
											"value": "<string>"
										},
										{
											"key": "validation[]",
											"value": "<string>"
										},
										{
											"key": "validation[]",
											"value": "<string>"
										},
										{
											"key": "property",
											"value": "<string>"
										},
										{
											"key": "property[]",
											"value": "<string>"
										},
										{
											"key": "property[]",
											"value": "<string>"
										},
										{
											"key": "slug",
											"value": "<string>"
										},
										{
											"key": "slug[]",
											"value": "<string>"
										},
										{
											"key": "slug[]",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "<boolean>"
										},
										{
											"key": "start[]",
											"value": "<boolean>"
										},
										{
											"key": "start[]",
											"value": "<boolean>"
										},
										{
											"key": "dateCreated",
											"value": "<string>"
										},
										{
											"key": "dateCreated[]",
											"value": "<string>"
										},
										{
											"key": "dateModified",
											"value": "<string>"
										},
										{
											"key": "dateModified[]",
											"value": "<string>"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"hydra:member\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"icon\": \"<string>\",\n   \"options\": \"<string>\",\n   \"validation\": \"<string>\",\n   \"next\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"previous\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"property\": \"<string>\",\n   \"slug\": \"<string>\",\n   \"start\": \"<boolean>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"sections\": [\n    {\n     \"name\": \"<string>\",\n     \"@context\": \"<string>\",\n     \"@id\": \"<string>\",\n     \"@type\": \"<string>\",\n     \"id\": \"<uuid>\",\n     \"description\": \"<string>\",\n     \"properties\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"stage\": {\n      \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n     },\n     \"dateCreated\": \"<dateTime>\",\n     \"dateModified\": \"<dateTime>\",\n     \"start\": \"<boolean>\"\n    },\n    {\n     \"name\": \"<string>\",\n     \"@context\": \"<string>\",\n     \"@id\": \"<string>\",\n     \"@type\": \"<string>\",\n     \"id\": \"<uuid>\",\n     \"description\": \"<string>\",\n     \"properties\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"stage\": {\n      \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n     },\n     \"dateCreated\": \"<dateTime>\",\n     \"dateModified\": \"<dateTime>\",\n     \"start\": \"<boolean>\"\n    }\n   ]\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"icon\": \"<string>\",\n   \"options\": \"<string>\",\n   \"validation\": \"<string>\",\n   \"next\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"previous\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"property\": \"<string>\",\n   \"slug\": \"<string>\",\n   \"start\": \"<boolean>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"sections\": [\n    {\n     \"name\": \"<string>\",\n     \"@context\": \"<string>\",\n     \"@id\": \"<string>\",\n     \"@type\": \"<string>\",\n     \"id\": \"<uuid>\",\n     \"description\": \"<string>\",\n     \"properties\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"stage\": {\n      \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n     },\n     \"dateCreated\": \"<dateTime>\",\n     \"dateModified\": \"<dateTime>\",\n     \"start\": \"<boolean>\"\n    },\n    {\n     \"name\": \"<string>\",\n     \"@context\": \"<string>\",\n     \"@id\": \"<string>\",\n     \"@type\": \"<string>\",\n     \"id\": \"<uuid>\",\n     \"description\": \"<string>\",\n     \"properties\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"stage\": {\n      \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n     },\n     \"dateCreated\": \"<dateTime>\",\n     \"dateModified\": \"<dateTime>\",\n     \"start\": \"<boolean>\"\n    }\n   ]\n  }\n ],\n \"hydra:totalItems\": \"<integer>\",\n \"hydra:view\": {\n  \"@id\": \"<iri-reference>\",\n  \"@type\": \"<string>\",\n  \"hydra:first\": \"<iri-reference>\",\n  \"hydra:last\": \"<iri-reference>\",\n  \"hydra:next\": \"<iri-reference>\"\n },\n \"hydra:search\": {\n  \"@type\": \"<string>\",\n  \"hydra:template\": \"<string>\",\n  \"hydra:variableRepresentation\": \"<string>\",\n  \"hydra:mapping\": [\n   {\n    \"@type\": \"<string>\",\n    \"variable\": \"<string>\",\n    \"property\": \"<string>\",\n    \"required\": \"<boolean>\"\n   },\n   {\n    \"@type\": \"<string>\",\n    \"variable\": \"<string>\",\n    \"property\": \"<string>\",\n    \"required\": \"<boolean>\"\n   }\n  ]\n }\n}"
						}
					]
				},
				{
					"name": "Creates a Test resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a64df395-cd91-4381-8844-4af1019d207d",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     // pm.response.to.be.created; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Set ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"    //var payloadData = JSON.parse(jsonData.Payload); //parsed payload\r",
									"\r",
									"    //console.log(payloadData.Id);\r",
									"\r",
									"    pm.environment.set(\"test\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test test\",\n    \"description\": \"Deze test is om mee te testen ;)\",\n    \"activity\": \"{{baseUrl}}/activities/{{activity}}\",\n    \"course\": \"{{baseUrl}}/courses/{{course}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tests"
							]
						}
					},
					"response": [
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Stage resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"icon\": \"<string>\",\n \"options\": \"<string>\",\n \"validation\": \"<string>\",\n \"next\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"previous\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"property\": \"<string>\",\n \"slug\": \"<string>\",\n \"start\": \"<boolean>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"sections\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "tests/{id}",
			"item": [
				{
					"name": "Retrieves a Test resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7cfe971d-9c99-41ef-b81f-b6eb9b4076eb",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tests/{{test}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tests",
								"{{test}}"
							]
						}
					},
					"response": [
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Stage resource response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"icon\": \"<string>\",\n \"options\": \"<string>\",\n \"validation\": \"<string>\",\n \"next\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"previous\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"property\": \"<string>\",\n \"slug\": \"<string>\",\n \"start\": \"<boolean>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"sections\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Replaces the Test resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9991ac45-2429-458b-9385-5c3698a5e3fa",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test test\",\n    \"description\": \"Deze test is om mee te testen!\",\n    \"activity\": \"{{baseUrl}}/activities/{{activity}}\",\n    \"course\": \"{{baseUrl}}/courses/{{course}}\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tests/{{test}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tests",
								"{{test}}"
							]
						}
					},
					"response": [
						{
							"name": "Stage resource updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"icon\": \"<string>\",\n \"options\": \"<string>\",\n \"validation\": \"<string>\",\n \"next\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"previous\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"property\": \"<string>\",\n \"slug\": \"<string>\",\n \"start\": \"<boolean>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"sections\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  }\n ]\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "stages",
			"item": [
				{
					"name": "Retrieves the collection of Stage resources.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa720524-4927-474b-81c2-23024ac96202",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages"
							]
						}
					},
					"response": [
						{
							"name": "Stage collection response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages?start=<boolean>&order[id]=<string>&order[name]=<string>&order[description]=<string>&order[icon]=<string>&order[options]=<string>&order[validation]=<string>&order[property]=<string>&order[slug]=<string>&order[start]=<string>&order[dateCreated]=<string>&order[dateModified]=<string>&dateCreated[before]=<string>&dateCreated[strictly_before]=<string>&dateCreated[after]=<string>&dateCreated[strictly_after]=<string>&dateModified[before]=<string>&dateModified[strictly_before]=<string>&dateModified[after]=<string>&dateModified[strictly_after]=<string>&id=<string>&id[]=<string>&id[]=<string>&name=<string>&name[]=<string>&name[]=<string>&description=<string>&description[]=<string>&description[]=<string>&icon=<string>&icon[]=<string>&icon[]=<string>&options=<string>&options[]=<string>&options[]=<string>&validation=<string>&validation[]=<string>&validation[]=<string>&property=<string>&property[]=<string>&property[]=<string>&slug=<string>&slug[]=<string>&slug[]=<string>&start=<boolean>&start[]=<boolean>&start[]=<boolean>&dateCreated=<string>&dateCreated[]=<string>&dateModified=<string>&dateModified[]=<string>&page=1&extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									],
									"query": [
										{
											"key": "start",
											"value": "<boolean>"
										},
										{
											"key": "order[id]",
											"value": "<string>"
										},
										{
											"key": "order[name]",
											"value": "<string>"
										},
										{
											"key": "order[description]",
											"value": "<string>"
										},
										{
											"key": "order[icon]",
											"value": "<string>"
										},
										{
											"key": "order[options]",
											"value": "<string>"
										},
										{
											"key": "order[validation]",
											"value": "<string>"
										},
										{
											"key": "order[property]",
											"value": "<string>"
										},
										{
											"key": "order[slug]",
											"value": "<string>"
										},
										{
											"key": "order[start]",
											"value": "<string>"
										},
										{
											"key": "order[dateCreated]",
											"value": "<string>"
										},
										{
											"key": "order[dateModified]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[before]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[strictly_before]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[after]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[strictly_after]",
											"value": "<string>"
										},
										{
											"key": "dateModified[before]",
											"value": "<string>"
										},
										{
											"key": "dateModified[strictly_before]",
											"value": "<string>"
										},
										{
											"key": "dateModified[after]",
											"value": "<string>"
										},
										{
											"key": "dateModified[strictly_after]",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "id[]",
											"value": "<string>"
										},
										{
											"key": "id[]",
											"value": "<string>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "name[]",
											"value": "<string>"
										},
										{
											"key": "name[]",
											"value": "<string>"
										},
										{
											"key": "description",
											"value": "<string>"
										},
										{
											"key": "description[]",
											"value": "<string>"
										},
										{
											"key": "description[]",
											"value": "<string>"
										},
										{
											"key": "icon",
											"value": "<string>"
										},
										{
											"key": "icon[]",
											"value": "<string>"
										},
										{
											"key": "icon[]",
											"value": "<string>"
										},
										{
											"key": "options",
											"value": "<string>"
										},
										{
											"key": "options[]",
											"value": "<string>"
										},
										{
											"key": "options[]",
											"value": "<string>"
										},
										{
											"key": "validation",
											"value": "<string>"
										},
										{
											"key": "validation[]",
											"value": "<string>"
										},
										{
											"key": "validation[]",
											"value": "<string>"
										},
										{
											"key": "property",
											"value": "<string>"
										},
										{
											"key": "property[]",
											"value": "<string>"
										},
										{
											"key": "property[]",
											"value": "<string>"
										},
										{
											"key": "slug",
											"value": "<string>"
										},
										{
											"key": "slug[]",
											"value": "<string>"
										},
										{
											"key": "slug[]",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "<boolean>"
										},
										{
											"key": "start[]",
											"value": "<boolean>"
										},
										{
											"key": "start[]",
											"value": "<boolean>"
										},
										{
											"key": "dateCreated",
											"value": "<string>"
										},
										{
											"key": "dateCreated[]",
											"value": "<string>"
										},
										{
											"key": "dateModified",
											"value": "<string>"
										},
										{
											"key": "dateModified[]",
											"value": "<string>"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"hydra:member\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"icon\": \"<string>\",\n   \"options\": \"<string>\",\n   \"validation\": \"<string>\",\n   \"next\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"previous\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"property\": \"<string>\",\n   \"slug\": \"<string>\",\n   \"start\": \"<boolean>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"sections\": [\n    {\n     \"name\": \"<string>\",\n     \"@context\": \"<string>\",\n     \"@id\": \"<string>\",\n     \"@type\": \"<string>\",\n     \"id\": \"<uuid>\",\n     \"description\": \"<string>\",\n     \"properties\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"stage\": {\n      \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n     },\n     \"dateCreated\": \"<dateTime>\",\n     \"dateModified\": \"<dateTime>\",\n     \"start\": \"<boolean>\"\n    },\n    {\n     \"name\": \"<string>\",\n     \"@context\": \"<string>\",\n     \"@id\": \"<string>\",\n     \"@type\": \"<string>\",\n     \"id\": \"<uuid>\",\n     \"description\": \"<string>\",\n     \"properties\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"stage\": {\n      \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n     },\n     \"dateCreated\": \"<dateTime>\",\n     \"dateModified\": \"<dateTime>\",\n     \"start\": \"<boolean>\"\n    }\n   ]\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"icon\": \"<string>\",\n   \"options\": \"<string>\",\n   \"validation\": \"<string>\",\n   \"next\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"previous\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"property\": \"<string>\",\n   \"slug\": \"<string>\",\n   \"start\": \"<boolean>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"sections\": [\n    {\n     \"name\": \"<string>\",\n     \"@context\": \"<string>\",\n     \"@id\": \"<string>\",\n     \"@type\": \"<string>\",\n     \"id\": \"<uuid>\",\n     \"description\": \"<string>\",\n     \"properties\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"stage\": {\n      \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n     },\n     \"dateCreated\": \"<dateTime>\",\n     \"dateModified\": \"<dateTime>\",\n     \"start\": \"<boolean>\"\n    },\n    {\n     \"name\": \"<string>\",\n     \"@context\": \"<string>\",\n     \"@id\": \"<string>\",\n     \"@type\": \"<string>\",\n     \"id\": \"<uuid>\",\n     \"description\": \"<string>\",\n     \"properties\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"stage\": {\n      \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n     },\n     \"dateCreated\": \"<dateTime>\",\n     \"dateModified\": \"<dateTime>\",\n     \"start\": \"<boolean>\"\n    }\n   ]\n  }\n ],\n \"hydra:totalItems\": \"<integer>\",\n \"hydra:view\": {\n  \"@id\": \"<iri-reference>\",\n  \"@type\": \"<string>\",\n  \"hydra:first\": \"<iri-reference>\",\n  \"hydra:last\": \"<iri-reference>\",\n  \"hydra:next\": \"<iri-reference>\"\n },\n \"hydra:search\": {\n  \"@type\": \"<string>\",\n  \"hydra:template\": \"<string>\",\n  \"hydra:variableRepresentation\": \"<string>\",\n  \"hydra:mapping\": [\n   {\n    \"@type\": \"<string>\",\n    \"variable\": \"<string>\",\n    \"property\": \"<string>\",\n    \"required\": \"<boolean>\"\n   },\n   {\n    \"@type\": \"<string>\",\n    \"variable\": \"<string>\",\n    \"property\": \"<string>\",\n    \"required\": \"<boolean>\"\n   }\n  ]\n }\n}"
						}
					]
				},
				{
					"name": "Creates a Stage resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "439b4a20-8fdb-4b84-b97d-fb9e3cffc341",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     // pm.response.to.be.created; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Set ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"    //var payloadData = JSON.parse(jsonData.Payload); //parsed payload\r",
									"\r",
									"    //console.log(payloadData.Id);\r",
									"\r",
									"    pm.environment.set(\"stage\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Vragenlijst 1\",\n    \"description\": \"Beantwoord deze vragen\",\n    \"start\": true,\n    \"test\": \"{{baseUrl}}/tests/{{test}}\",\n    \"orderNumber\": 0\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages"
							]
						}
					},
					"response": [
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Stage resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"icon\": \"<string>\",\n \"options\": \"<string>\",\n \"validation\": \"<string>\",\n \"next\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"previous\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"property\": \"<string>\",\n \"slug\": \"<string>\",\n \"start\": \"<boolean>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"sections\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  }\n ]\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "stages/{id}",
			"item": [
				{
					"name": "Retrieves a Stage resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "806981c2-f0e7-4b22-b716-7c686083cb1f",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stages/{{stage}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages",
								"{{stage}}"
							]
						}
					},
					"response": [
						{
							"name": "Stage resource response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"icon\": \"<string>\",\n \"options\": \"<string>\",\n \"validation\": \"<string>\",\n \"next\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"previous\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"property\": \"<string>\",\n \"slug\": \"<string>\",\n \"start\": \"<boolean>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"sections\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  }\n ]\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Replaces the Stage resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "512d80be-13af-4648-8438-223feb7d2991",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Vragenlijst 1\",\n    \"description\": \"Beantwoord deze vragen:\",\n    \"start\": true,\n    \"test\": \"{{baseUrl}}/tests/{{test}}\",\n    \"orderNumber\": 0\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/stages/{{stage}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages",
								"{{stage}}"
							]
						}
					},
					"response": [
						{
							"name": "Stage resource updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"icon\": \"<string>\",\n \"options\": \"<string>\",\n \"validation\": \"<string>\",\n \"next\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"previous\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"property\": \"<string>\",\n \"slug\": \"<string>\",\n \"start\": \"<boolean>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"sections\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  }\n ]\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "questions",
			"item": [
				{
					"name": "Retrieves the collection of Question resources.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "660af580-c360-4078-891a-d226a2e9ec64",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/questions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"questions"
							]
						}
					},
					"response": [
						{
							"name": "Section collection response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sections?start=<boolean>&order[id]=<string>&order[name]=<string>&order[description]=<string>&order[properties]=<string>&order[dateCreated]=<string>&order[dateModified]=<string>&order[start]=<string>&dateCreated[before]=<string>&dateCreated[strictly_before]=<string>&dateCreated[after]=<string>&dateCreated[strictly_after]=<string>&dateModified[before]=<string>&dateModified[strictly_before]=<string>&dateModified[after]=<string>&dateModified[strictly_after]=<string>&id=<string>&id[]=<string>&id[]=<string>&name=<string>&name[]=<string>&name[]=<string>&description=<string>&description[]=<string>&description[]=<string>&properties=<string>&properties[][]=<string>&properties[][]=<string>&dateCreated=<string>&dateCreated[]=<string>&dateModified=<string>&dateModified[]=<string>&start=<boolean>&start[]=<boolean>&start[]=<boolean>&page=1&extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections"
									],
									"query": [
										{
											"key": "start",
											"value": "<boolean>"
										},
										{
											"key": "order[id]",
											"value": "<string>"
										},
										{
											"key": "order[name]",
											"value": "<string>"
										},
										{
											"key": "order[description]",
											"value": "<string>"
										},
										{
											"key": "order[properties]",
											"value": "<string>"
										},
										{
											"key": "order[dateCreated]",
											"value": "<string>"
										},
										{
											"key": "order[dateModified]",
											"value": "<string>"
										},
										{
											"key": "order[start]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[before]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[strictly_before]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[after]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[strictly_after]",
											"value": "<string>"
										},
										{
											"key": "dateModified[before]",
											"value": "<string>"
										},
										{
											"key": "dateModified[strictly_before]",
											"value": "<string>"
										},
										{
											"key": "dateModified[after]",
											"value": "<string>"
										},
										{
											"key": "dateModified[strictly_after]",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "id[]",
											"value": "<string>"
										},
										{
											"key": "id[]",
											"value": "<string>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "name[]",
											"value": "<string>"
										},
										{
											"key": "name[]",
											"value": "<string>"
										},
										{
											"key": "description",
											"value": "<string>"
										},
										{
											"key": "description[]",
											"value": "<string>"
										},
										{
											"key": "description[]",
											"value": "<string>"
										},
										{
											"key": "properties",
											"value": "<string>"
										},
										{
											"key": "properties[][]",
											"value": "<string>"
										},
										{
											"key": "properties[][]",
											"value": "<string>"
										},
										{
											"key": "dateCreated",
											"value": "<string>"
										},
										{
											"key": "dateCreated[]",
											"value": "<string>"
										},
										{
											"key": "dateModified",
											"value": "<string>"
										},
										{
											"key": "dateModified[]",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "<boolean>"
										},
										{
											"key": "start[]",
											"value": "<boolean>"
										},
										{
											"key": "start[]",
											"value": "<boolean>"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"hydra:member\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  }\n ],\n \"hydra:totalItems\": \"<integer>\",\n \"hydra:view\": {\n  \"@id\": \"<iri-reference>\",\n  \"@type\": \"<string>\",\n  \"hydra:first\": \"<iri-reference>\",\n  \"hydra:last\": \"<iri-reference>\",\n  \"hydra:next\": \"<iri-reference>\"\n },\n \"hydra:search\": {\n  \"@type\": \"<string>\",\n  \"hydra:template\": \"<string>\",\n  \"hydra:variableRepresentation\": \"<string>\",\n  \"hydra:mapping\": [\n   {\n    \"@type\": \"<string>\",\n    \"variable\": \"<string>\",\n    \"property\": \"<string>\",\n    \"required\": \"<boolean>\"\n   },\n   {\n    \"@type\": \"<string>\",\n    \"variable\": \"<string>\",\n    \"property\": \"<string>\",\n    \"required\": \"<boolean>\"\n   }\n  ]\n }\n}"
						}
					]
				},
				{
					"name": "Creates a Question resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9a37ea3b-c473-4d5c-9c4c-28d9d8511d50",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     // pm.response.to.be.created; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Set ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"    //var payloadData = JSON.parse(jsonData.Payload); //parsed payload\r",
									"\r",
									"    //console.log(payloadData.Id);\r",
									"\r",
									"    pm.environment.set(\"question\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Vraag 1\",\n    \"description\": \"Wat is het antwoord op deze vraag?\",\n    \"answer\": \"Wat\",\n    \"answerOptions\": [\n        \"het antwoord\",\n        \"Welke vraag?\",\n        \"Wat\"\n    ],\n    \"start\": true,\n    \"stage\": \"{{baseUrl}}/stages/{{stage}}\",\n    \"orderNumber\": 0\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/questions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"questions"
							]
						}
					},
					"response": [
						{
							"name": "Section resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"stage\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"start\": \"<boolean>\",\n    \"next\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"properties\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"stage\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"start\": \"<boolean>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        }\n    },\n    \"previous\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"properties\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"stage\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"start\": \"<boolean>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"properties\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"stage\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"start\": \"<boolean>\"\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"stage\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"start\": \"<boolean>\",\n    \"next\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"properties\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"stage\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"start\": \"<boolean>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        }\n    },\n    \"previous\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"properties\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"stage\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"start\": \"<boolean>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"stage\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"start\": \"<boolean>\",\n    \"next\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"properties\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"stage\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"start\": \"<boolean>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        }\n    },\n    \"previous\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"properties\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"stage\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"start\": \"<boolean>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "97f1e404-53b3-4f28-8176-ffd83c5c6efb",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "eb504290-ea89-4747-b80d-542c6a8518a7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "questions/{id}",
			"item": [
				{
					"name": "Retrieves a Question resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "491ac781-1044-4c0d-a4dc-7094cb981e12",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/questions/{{question}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"questions",
								"{{question}}"
							]
						}
					},
					"response": [
						{
							"name": "Section resource response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sections/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"properties\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"stage\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"start\": \"<boolean>\"\n}"
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sections/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Replaces the Question resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66ac8f35-3e40-4fde-8c51-858940dbfc70",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Vraag 1\",\n    \"description\": \"Wat is het antwoord op deze vraag?\",\n    \"answer\": \"Wat\",\n    \"answerOptions\": [\n        \"Welke vraag?\",\n        \"Wat\"\n    ],\n    \"stage\": \"{{baseUrl}}/stages/{{stage}}\",\n    \"orderNumber\": 0\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/questions/{{question}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"questions",
								"{{question}}"
							]
						}
					},
					"response": [
						{
							"name": "Section resource updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"stage\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"start\": \"<boolean>\",\n    \"next\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"properties\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"stage\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"start\": \"<boolean>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        }\n    },\n    \"previous\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"properties\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"stage\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"start\": \"<boolean>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sections/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"properties\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"stage\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"start\": \"<boolean>\"\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"stage\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"start\": \"<boolean>\",\n    \"next\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"properties\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"stage\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"start\": \"<boolean>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        }\n    },\n    \"previous\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"properties\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"stage\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"start\": \"<boolean>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sections/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"stage\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"start\": \"<boolean>\",\n    \"next\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"properties\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"stage\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"start\": \"<boolean>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        }\n    },\n    \"previous\": {\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"properties\": [\n            \"<string>\",\n            \"<string>\"\n        ],\n        \"stage\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"start\": \"<boolean>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/sections/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sections",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7ef4238a-f8a3-466b-b813-eec03016798e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9f82bbc3-93d9-477b-9e9d-742bc652426e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "tests results",
			"item": [
				{
					"name": "Retrieves the collection of TestResult resources.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a835d95d-9552-4ddf-9761-94c198c18c6d",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_results",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_results"
							]
						}
					},
					"response": [
						{
							"name": "Stage collection response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages?start=<boolean>&order[id]=<string>&order[name]=<string>&order[description]=<string>&order[icon]=<string>&order[options]=<string>&order[validation]=<string>&order[property]=<string>&order[slug]=<string>&order[start]=<string>&order[dateCreated]=<string>&order[dateModified]=<string>&dateCreated[before]=<string>&dateCreated[strictly_before]=<string>&dateCreated[after]=<string>&dateCreated[strictly_after]=<string>&dateModified[before]=<string>&dateModified[strictly_before]=<string>&dateModified[after]=<string>&dateModified[strictly_after]=<string>&id=<string>&id[]=<string>&id[]=<string>&name=<string>&name[]=<string>&name[]=<string>&description=<string>&description[]=<string>&description[]=<string>&icon=<string>&icon[]=<string>&icon[]=<string>&options=<string>&options[]=<string>&options[]=<string>&validation=<string>&validation[]=<string>&validation[]=<string>&property=<string>&property[]=<string>&property[]=<string>&slug=<string>&slug[]=<string>&slug[]=<string>&start=<boolean>&start[]=<boolean>&start[]=<boolean>&dateCreated=<string>&dateCreated[]=<string>&dateModified=<string>&dateModified[]=<string>&page=1&extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									],
									"query": [
										{
											"key": "start",
											"value": "<boolean>"
										},
										{
											"key": "order[id]",
											"value": "<string>"
										},
										{
											"key": "order[name]",
											"value": "<string>"
										},
										{
											"key": "order[description]",
											"value": "<string>"
										},
										{
											"key": "order[icon]",
											"value": "<string>"
										},
										{
											"key": "order[options]",
											"value": "<string>"
										},
										{
											"key": "order[validation]",
											"value": "<string>"
										},
										{
											"key": "order[property]",
											"value": "<string>"
										},
										{
											"key": "order[slug]",
											"value": "<string>"
										},
										{
											"key": "order[start]",
											"value": "<string>"
										},
										{
											"key": "order[dateCreated]",
											"value": "<string>"
										},
										{
											"key": "order[dateModified]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[before]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[strictly_before]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[after]",
											"value": "<string>"
										},
										{
											"key": "dateCreated[strictly_after]",
											"value": "<string>"
										},
										{
											"key": "dateModified[before]",
											"value": "<string>"
										},
										{
											"key": "dateModified[strictly_before]",
											"value": "<string>"
										},
										{
											"key": "dateModified[after]",
											"value": "<string>"
										},
										{
											"key": "dateModified[strictly_after]",
											"value": "<string>"
										},
										{
											"key": "id",
											"value": "<string>"
										},
										{
											"key": "id[]",
											"value": "<string>"
										},
										{
											"key": "id[]",
											"value": "<string>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "name[]",
											"value": "<string>"
										},
										{
											"key": "name[]",
											"value": "<string>"
										},
										{
											"key": "description",
											"value": "<string>"
										},
										{
											"key": "description[]",
											"value": "<string>"
										},
										{
											"key": "description[]",
											"value": "<string>"
										},
										{
											"key": "icon",
											"value": "<string>"
										},
										{
											"key": "icon[]",
											"value": "<string>"
										},
										{
											"key": "icon[]",
											"value": "<string>"
										},
										{
											"key": "options",
											"value": "<string>"
										},
										{
											"key": "options[]",
											"value": "<string>"
										},
										{
											"key": "options[]",
											"value": "<string>"
										},
										{
											"key": "validation",
											"value": "<string>"
										},
										{
											"key": "validation[]",
											"value": "<string>"
										},
										{
											"key": "validation[]",
											"value": "<string>"
										},
										{
											"key": "property",
											"value": "<string>"
										},
										{
											"key": "property[]",
											"value": "<string>"
										},
										{
											"key": "property[]",
											"value": "<string>"
										},
										{
											"key": "slug",
											"value": "<string>"
										},
										{
											"key": "slug[]",
											"value": "<string>"
										},
										{
											"key": "slug[]",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "<boolean>"
										},
										{
											"key": "start[]",
											"value": "<boolean>"
										},
										{
											"key": "start[]",
											"value": "<boolean>"
										},
										{
											"key": "dateCreated",
											"value": "<string>"
										},
										{
											"key": "dateCreated[]",
											"value": "<string>"
										},
										{
											"key": "dateModified",
											"value": "<string>"
										},
										{
											"key": "dateModified[]",
											"value": "<string>"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"hydra:member\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"icon\": \"<string>\",\n   \"options\": \"<string>\",\n   \"validation\": \"<string>\",\n   \"next\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"previous\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"property\": \"<string>\",\n   \"slug\": \"<string>\",\n   \"start\": \"<boolean>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"sections\": [\n    {\n     \"name\": \"<string>\",\n     \"@context\": \"<string>\",\n     \"@id\": \"<string>\",\n     \"@type\": \"<string>\",\n     \"id\": \"<uuid>\",\n     \"description\": \"<string>\",\n     \"properties\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"stage\": {\n      \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n     },\n     \"dateCreated\": \"<dateTime>\",\n     \"dateModified\": \"<dateTime>\",\n     \"start\": \"<boolean>\"\n    },\n    {\n     \"name\": \"<string>\",\n     \"@context\": \"<string>\",\n     \"@id\": \"<string>\",\n     \"@type\": \"<string>\",\n     \"id\": \"<uuid>\",\n     \"description\": \"<string>\",\n     \"properties\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"stage\": {\n      \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n     },\n     \"dateCreated\": \"<dateTime>\",\n     \"dateModified\": \"<dateTime>\",\n     \"start\": \"<boolean>\"\n    }\n   ]\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"icon\": \"<string>\",\n   \"options\": \"<string>\",\n   \"validation\": \"<string>\",\n   \"next\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"previous\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"property\": \"<string>\",\n   \"slug\": \"<string>\",\n   \"start\": \"<boolean>\",\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"sections\": [\n    {\n     \"name\": \"<string>\",\n     \"@context\": \"<string>\",\n     \"@id\": \"<string>\",\n     \"@type\": \"<string>\",\n     \"id\": \"<uuid>\",\n     \"description\": \"<string>\",\n     \"properties\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"stage\": {\n      \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n     },\n     \"dateCreated\": \"<dateTime>\",\n     \"dateModified\": \"<dateTime>\",\n     \"start\": \"<boolean>\"\n    },\n    {\n     \"name\": \"<string>\",\n     \"@context\": \"<string>\",\n     \"@id\": \"<string>\",\n     \"@type\": \"<string>\",\n     \"id\": \"<uuid>\",\n     \"description\": \"<string>\",\n     \"properties\": [\n      \"<string>\",\n      \"<string>\"\n     ],\n     \"stage\": {\n      \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n     },\n     \"dateCreated\": \"<dateTime>\",\n     \"dateModified\": \"<dateTime>\",\n     \"start\": \"<boolean>\"\n    }\n   ]\n  }\n ],\n \"hydra:totalItems\": \"<integer>\",\n \"hydra:view\": {\n  \"@id\": \"<iri-reference>\",\n  \"@type\": \"<string>\",\n  \"hydra:first\": \"<iri-reference>\",\n  \"hydra:last\": \"<iri-reference>\",\n  \"hydra:next\": \"<iri-reference>\"\n },\n \"hydra:search\": {\n  \"@type\": \"<string>\",\n  \"hydra:template\": \"<string>\",\n  \"hydra:variableRepresentation\": \"<string>\",\n  \"hydra:mapping\": [\n   {\n    \"@type\": \"<string>\",\n    \"variable\": \"<string>\",\n    \"property\": \"<string>\",\n    \"required\": \"<boolean>\"\n   },\n   {\n    \"@type\": \"<string>\",\n    \"variable\": \"<string>\",\n    \"property\": \"<string>\",\n    \"required\": \"<boolean>\"\n   }\n  ]\n }\n}"
						}
					]
				},
				{
					"name": "Creates a TestResult resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "53c1c09a-15d9-442f-b8b2-2caef099868b",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     // pm.response.to.be.created; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Set ID\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    console.log(jsonData);\r",
									"    //var payloadData = JSON.parse(jsonData.Payload); //parsed payload\r",
									"\r",
									"    //console.log(payloadData.Id);\r",
									"\r",
									"    pm.environment.set(\"test_result\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test test\",\n    \"description\": \"Deze test is om mee te testen ;)\",\n    \"test\": \"{{baseUrl}}/tests/{{test}}\",\n    \"participant\": \"{{baseUrl}}/participants/{{participant}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/test_results",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_results"
							]
						}
					},
					"response": [
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Stage resource created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"icon\": \"<string>\",\n \"options\": \"<string>\",\n \"validation\": \"<string>\",\n \"next\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"previous\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"property\": \"<string>\",\n \"slug\": \"<string>\",\n \"start\": \"<boolean>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"sections\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  }\n ]\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d545913d-a19e-4339-a293-a5b49a358206",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f2e05059-a20d-4b5d-8109-f6baaaae4e3b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "test results/{id}",
			"item": [
				{
					"name": "Retrieves a TestResult resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4554c16-4cbc-4c63-b4bd-4d0de2a92353",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Link",
								"value": "",
								"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_results/{{test_result}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_results",
								"{{test_result}}"
							]
						}
					},
					"response": [
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Stage resource response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									},
									{
										"key": "Link",
										"value": "",
										"description": "A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel=\"hub\""
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stages/:id?extend[]=<array>&fields[]=<array>&validOn=<dateTime>&validFrom=<dateTime>&validUntil=<dateTime>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"query": [
										{
											"key": "extend[]",
											"value": "<array>"
										},
										{
											"key": "fields[]",
											"value": "<array>"
										},
										{
											"key": "validOn",
											"value": "<dateTime>"
										},
										{
											"key": "validFrom",
											"value": "<dateTime>"
										},
										{
											"key": "validUntil",
											"value": "<dateTime>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"icon\": \"<string>\",\n \"options\": \"<string>\",\n \"validation\": \"<string>\",\n \"next\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"previous\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"property\": \"<string>\",\n \"slug\": \"<string>\",\n \"start\": \"<boolean>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"sections\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Replaces the TestResult resource.",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5d668c21-b343-4147-9046-cf94fcfb643f",
								"exec": [
									"// example using pm.response.to.have\r",
									"pm.test(\"response is ok\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// example using response assertions\r",
									"pm.test(\"response should be okay to process\", function () {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.not.have.jsonBody(\"error\");\r",
									"});\r",
									"\r",
									"// example using pm.response.to.be*\r",
									"pm.test(\"response must be valid and have a body\", function () {\r",
									"     // assert that the status code is 200\r",
									"     pm.response.to.be.ok; // info, success, redirection, clientError,  serverError, are other variants\r",
									"     // assert that the response has a valid JSON body\r",
									"     pm.response.to.be.withBody;\r",
									"     pm.response.to.be.json; // this assertion also checks if a body  exists, so the above check is not needed\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "",
								"description": "The JWT of the entity performing the request"
							},
							{
								"key": "API-Version",
								"value": "",
								"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
							},
							{
								"key": "X-NLX-Logrecord-ID",
								"value": "",
								"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
							},
							{
								"key": "X-NLX-Request-Process-Id",
								"value": "",
								"description": "A process id for purpose registration (doelbinding)"
							},
							{
								"key": "X-NLX-Request-Data-Elements",
								"value": "",
								"description": "A list of requested data elements"
							},
							{
								"key": "X-NLX-Request-Data-Subject",
								"value": "",
								"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
							},
							{
								"key": "X-NLX-Audit-Clarification",
								"value": "",
								"description": "A clarification as to why a request has been made  (doelbinding)"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test test\",\n    \"description\": \"Deze test is om mee te testen\",\n    \"test\": \"{{baseUrl}}/tests/{{test}}\",\n    \"participant\": \"{{baseUrl}}/participants/{{participant}}\"\n}\n",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/test_results/{{test_result}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_results",
								"{{test_result}}"
							]
						}
					},
					"response": [
						{
							"name": "Resource not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Stage resource updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/ld+json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"<string>\",\n \"@context\": \"<string>\",\n \"@id\": \"<string>\",\n \"@type\": \"<string>\",\n \"id\": \"<uuid>\",\n \"description\": \"<string>\",\n \"icon\": \"<string>\",\n \"options\": \"<string>\",\n \"validation\": \"<string>\",\n \"next\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"previous\": {\n  \"name\": \"<string>\",\n  \"@context\": \"<string>\",\n  \"@id\": \"<string>\",\n  \"@type\": \"<string>\",\n  \"id\": \"<uuid>\",\n  \"description\": \"<string>\",\n  \"icon\": \"<string>\",\n  \"options\": \"<string>\",\n  \"validation\": \"<string>\",\n  \"next\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"previous\": {\n   \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n  },\n  \"property\": \"<string>\",\n  \"slug\": \"<string>\",\n  \"start\": \"<boolean>\",\n  \"dateCreated\": \"<dateTime>\",\n  \"dateModified\": \"<dateTime>\",\n  \"sections\": [\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   },\n   {\n    \"name\": \"<string>\",\n    \"@context\": \"<string>\",\n    \"@id\": \"<string>\",\n    \"@type\": \"<string>\",\n    \"id\": \"<uuid>\",\n    \"description\": \"<string>\",\n    \"properties\": [\n     \"<string>\",\n     \"<string>\"\n    ],\n    \"stage\": {\n     \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n    },\n    \"dateCreated\": \"<dateTime>\",\n    \"dateModified\": \"<dateTime>\",\n    \"start\": \"<boolean>\"\n   }\n  ]\n },\n \"property\": \"<string>\",\n \"slug\": \"<string>\",\n \"start\": \"<boolean>\",\n \"dateCreated\": \"<dateTime>\",\n \"dateModified\": \"<dateTime>\",\n \"sections\": [\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  },\n  {\n   \"name\": \"<string>\",\n   \"@context\": \"<string>\",\n   \"@id\": \"<string>\",\n   \"@type\": \"<string>\",\n   \"id\": \"<uuid>\",\n   \"description\": \"<string>\",\n   \"properties\": [\n    \"<string>\",\n    \"<string>\"\n   ],\n   \"stage\": {\n    \"value\": \"<Circular reference to #/components/schemas/Stage:jsonld-read detected>\"\n   },\n   \"dateCreated\": \"<dateTime>\",\n   \"dateModified\": \"<dateTime>\",\n   \"start\": \"<boolean>\"\n  }\n ]\n}"
						},
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "",
										"description": "The JWT of the entity performing the request"
									},
									{
										"key": "API-Version",
										"value": "",
										"description": "The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)"
									},
									{
										"key": "X-NLX-Logrecord-ID",
										"value": "",
										"description": "A  globally unique id of the request, which makes a request traceable throughout the network."
									},
									{
										"key": "X-NLX-Request-Process-Id",
										"value": "",
										"description": "A process id for purpose registration (doelbinding)"
									},
									{
										"key": "X-NLX-Request-Data-Elements",
										"value": "",
										"description": "A list of requested data elements"
									},
									{
										"key": "X-NLX-Request-Data-Subject",
										"value": "",
										"description": "A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`"
									},
									{
										"key": "X-NLX-Audit-Clarification",
										"value": "",
										"description": "A clarification as to why a request has been made  (doelbinding)"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"icon\": \"<string>\",\n    \"options\": \"<string>\",\n    \"next\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"previous\": {\n        \"icon\": \"<string>\",\n        \"options\": \"<string>\",\n        \"next\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"previous\": {\n            \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n        },\n        \"property\": \"<string>\",\n        \"slug\": \"<string>\",\n        \"start\": \"<boolean>\",\n        \"sections\": [\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            },\n            {\n                \"name\": \"<string>\",\n                \"description\": \"<string>\",\n                \"properties\": [\n                    \"<string>\",\n                    \"<string>\"\n                ],\n                \"stage\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n                },\n                \"start\": \"<boolean>\",\n                \"next\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                },\n                \"previous\": {\n                    \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n                }\n            }\n        ]\n    },\n    \"property\": \"<string>\",\n    \"slug\": \"<string>\",\n    \"start\": \"<boolean>\",\n    \"sections\": [\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        },\n        {\n            \"name\": \"<string>\",\n            \"description\": \"<string>\",\n            \"properties\": [\n                \"<string>\",\n                \"<string>\"\n            ],\n            \"stage\": {\n                \"value\": \"<Circular reference to #/components/schemas/Stage-write detected>\"\n            },\n            \"start\": \"<boolean>\",\n            \"next\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            },\n            \"previous\": {\n                \"value\": \"<Circular reference to #/components/schemas/Section-write detected>\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/stages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stages",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c3c9f841-2ab1-4310-9c49-bc593efd9416",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e3081096-5898-4201-b182-1a8033524804",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "45c1a4b6-59d3-4a6e-86bf-88a872f35845",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2b58fbc2-628d-447f-8673-c1be7a7033c3",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ec3c0af7-7d7b-4fcb-8d9f-6788fbce2011",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "2ad4c132-c39b-4c13-9943-f2361aa5c9ab",
			"key": "baseUrl",
			"value": "https://edu.dev.conduction.nl"
		}
	],
	"protocolProfileBehavior": {}
}