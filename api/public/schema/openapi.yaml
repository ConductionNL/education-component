openapi: 3.0.2
info:
  title: 'Education Component'
  version: V1.0
  description: |
    API Details
    - Component: Education Component
    - Reference: edu
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/education-component) / [zip](https://github.com/ConductionNL/education-component/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/edu-php) 
    - Datamodel: [postman](/schema/edu.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [modelio (zip)](/schema/Datamodel_Modelio.zip) 
    
    Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.         
    
paths:
  /activities:
    get:
      tags:
        - Activity
      operationId: getActivityCollection
      summary: 'Retrieves the collection of Activity resources.'
      responses:
        200:
          description: 'Activity collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Activity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Activity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
      parameters:
        -
          name: course.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'course.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Activity
      operationId: postActivityCollection
      summary: 'Creates a Activity resource.'
      responses:
        201:
          description: 'Activity resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Activity-read'
          links:
            GetActivityItem:
              parameters:
                id: '$response.body#/id'
              operationId: getActivityItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /activities/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Activity:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Activity:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Activity-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Activity-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Activity-write'
        description: 'The new Activity resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/activities/{id}':
    get:
      tags:
        - Activity
      operationId: getActivityItem
      summary: 'Retrieves a Activity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Activity resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Activity-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Activity
      operationId: deleteActivityItem
      summary: 'Removes the Activity resource.'
      responses:
        204:
          description: 'Activity resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Activity
      operationId: putActivityItem
      summary: 'Replaces the Activity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Activity resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Activity-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Activity:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Activity:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Activity-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Activity-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Activity-write'
        description: 'The updated Activity resource'
    patch:
      tags:
        - Activity
      operationId: patchActivityItem
      summary: 'Updates the Activity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Activity resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Activity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Activity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Activity-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Activity:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Activity-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Activity-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Activity-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Activity-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Activity-write'
        description: 'The updated Activity resource'
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /courses:
    get:
      tags:
        - Course
      operationId: getCourseCollection
      summary: 'Retrieves the collection of Course resources.'
      responses:
        200:
          description: 'Course collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Course:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Course:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
      parameters:
        -
          name: additionalType
          in: query
          required: false
          schema:
            type: string
        -
          name: organization
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Course
      operationId: postCourseCollection
      summary: 'Creates a Course resource.'
      responses:
        201:
          description: 'Course resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Course:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Course:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Course-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Course-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Course-read'
          links:
            GetCourseItem:
              parameters:
                id: '$response.body#/id'
              operationId: getCourseItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /courses/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Course:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Course:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Course-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Course-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Course-write'
        description: 'The new Course resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/courses/{id}':
    get:
      tags:
        - Course
      operationId: getCourseItem
      summary: 'Retrieves a Course resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Course resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Course:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Course:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Course-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Course-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Course-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Course
      operationId: deleteCourseItem
      summary: 'Removes the Course resource.'
      responses:
        204:
          description: 'Course resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Course
      operationId: putCourseItem
      summary: 'Replaces the Course resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Course resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Course:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Course:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Course-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Course-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Course-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Course:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Course:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Course-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Course-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Course-write'
        description: 'The updated Course resource'
    patch:
      tags:
        - Course
      operationId: patchCourseItem
      summary: 'Updates the Course resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Course resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Course:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Course:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Course-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Course-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Course-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Course-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Course:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Course-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Course-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Course-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Course-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Course-write'
        description: 'The updated Course resource'
  '/courses/{id}/activities':
    get:
      tags:
        - Activity
        - Course
      operationId: api_courses_activities_get_subresource
      summary: 'Retrieves the collection of Activity resources.'
      responses:
        200:
          description: 'Activity collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Activity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Activity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity-read'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: course.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'course.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
  '/courses/{id}/participants':
    get:
      tags:
        - Participant
        - Course
      operationId: api_courses_participants_get_subresource
      summary: 'Retrieves the collection of Participant resources.'
      responses:
        200:
          description: 'Participant collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participant:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participant:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[person]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateOfAcceptance]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[motivation]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateOfAcceptance[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateOfAcceptance[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateOfAcceptance[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateOfAcceptance[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: person
          in: query
          required: false
          schema:
            type: string
        -
          name: 'person[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: course.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'course.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: program.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'program.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: results.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'results.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
  '/courses/{id}/results':
    get:
      tags:
        - Result
        - Course
      operationId: api_courses_results_get_subresource
      summary: 'Retrieves the collection of Result resources.'
      responses:
        200:
          description: 'Result collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Result:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Result:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: participant.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'participant.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: activity.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'activity.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
  /education_events:
    get:
      tags:
        - EducationEvent
      operationId: getEducationEventCollection
      summary: 'Retrieves the collection of EducationEvent resources.'
      responses:
        200:
          description: 'EducationEvent collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/EducationEvent:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/EducationEvent:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationEvent-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationEvent-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationEvent-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationEvent-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationEvent-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationEvent-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationEvent-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationEvent-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationEvent-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationEvent-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EducationEvent-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - EducationEvent
      operationId: postEducationEventCollection
      summary: 'Creates a EducationEvent resource.'
      responses:
        201:
          description: 'EducationEvent resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EducationEvent:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/EducationEvent:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            text/html:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
          links:
            GetEducationEventItem:
              parameters:
                id: '$response.body#/id'
              operationId: getEducationEventItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /education_events/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/EducationEvent:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/EducationEvent:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/json:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          text/html:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
        description: 'The new EducationEvent resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/education_events/{id}':
    get:
      tags:
        - EducationEvent
      operationId: getEducationEventItem
      summary: 'Retrieves a EducationEvent resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'EducationEvent resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EducationEvent:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/EducationEvent:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            text/html:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - EducationEvent
      operationId: deleteEducationEventItem
      summary: 'Removes the EducationEvent resource.'
      responses:
        204:
          description: 'EducationEvent resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - EducationEvent
      operationId: putEducationEventItem
      summary: 'Replaces the EducationEvent resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'EducationEvent resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EducationEvent:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/EducationEvent:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            text/html:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/EducationEvent:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/EducationEvent:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/json:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          text/html:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
        description: 'The updated EducationEvent resource'
    patch:
      tags:
        - EducationEvent
      operationId: patchEducationEventItem
      summary: 'Updates the EducationEvent resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'EducationEvent resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EducationEvent:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/EducationEvent:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
            text/html:
              schema:
                $ref: '#/components/schemas/EducationEvent-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/EducationEvent:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
          text/html:
            schema:
              $ref: '#/components/schemas/EducationEvent-write'
        description: 'The updated EducationEvent resource'
  /groups:
    get:
      tags:
        - Group
      operationId: getGroupCollection
      summary: 'Retrieves the collection of Group resources.'
      responses:
        200:
          description: 'Group collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Group
      operationId: postGroupCollection
      summary: 'Creates a Group resource.'
      responses:
        201:
          description: 'Group resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
          links:
            GetGroupItem:
              parameters:
                id: '$response.body#/id'
              operationId: getGroupItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The new Group resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/groups/{id}':
    get:
      tags:
        - Group
      operationId: getGroupItem
      summary: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Group resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Group
      operationId: deleteGroupItem
      summary: 'Removes the Group resource.'
      responses:
        204:
          description: 'Group resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Group
      operationId: putGroupItem
      summary: 'Replaces the Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The updated Group resource'
    patch:
      tags:
        - Group
      operationId: patchGroupItem
      summary: 'Updates the Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The updated Group resource'
  /participants:
    get:
      tags:
        - Participant
      operationId: getParticipantCollection
      summary: 'Retrieves the collection of Participant resources.'
      responses:
        200:
          description: 'Participant collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participant:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participant:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[person]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateOfAcceptance]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[motivation]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateOfAcceptance[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateOfAcceptance[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateOfAcceptance[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateOfAcceptance[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: person
          in: query
          required: false
          schema:
            type: string
        -
          name: 'person[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: course.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'course.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: program.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'program.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: results.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'results.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Participant
      operationId: postParticipantCollection
      summary: 'Creates a Participant resource.'
      responses:
        201:
          description: 'Participant resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participant:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participant:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participant-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participant-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participant-read'
          links:
            GetParticipantItem:
              parameters:
                id: '$response.body#/id'
              operationId: getParticipantItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /participants/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participant:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participant:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participant-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participant-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participant-write'
        description: 'The new Participant resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/participants/{id}':
    get:
      tags:
        - Participant
      operationId: getParticipantItem
      summary: 'Retrieves a Participant resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Participant resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participant:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participant:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participant-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participant-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participant-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Participant
      operationId: deleteParticipantItem
      summary: 'Removes the Participant resource.'
      responses:
        204:
          description: 'Participant resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Participant
      operationId: putParticipantItem
      summary: 'Replaces the Participant resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Participant resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participant:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participant:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participant-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participant-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participant-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participant:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Participant:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Participant-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participant-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participant-write'
        description: 'The updated Participant resource'
    patch:
      tags:
        - Participant
      operationId: patchParticipantItem
      summary: 'Updates the Participant resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Participant resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Participant:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Participant:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Participant-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Participant-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Participant-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Participant-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Participant:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Participant-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Participant-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Participant-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Participant-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Participant-write'
        description: 'The updated Participant resource'
  '/participants/{id}/results':
    get:
      tags:
        - Result
        - Participant
      operationId: api_participants_results_get_subresource
      summary: 'Retrieves the collection of Result resources.'
      responses:
        200:
          description: 'Result collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Result:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Result:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: participant.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'participant.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: activity.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'activity.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
  /programs:
    get:
      tags:
        - Program
      operationId: getProgramCollection
      summary: 'Retrieves the collection of Program resources.'
      responses:
        200:
          description: 'Program collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Program:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Program:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Program-read'
      parameters:
        -
          name: provider
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Program
      operationId: postProgramCollection
      summary: 'Creates a Program resource.'
      responses:
        201:
          description: 'Program resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Program:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Program:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Program-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Program-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Program-read'
          links:
            GetProgramItem:
              parameters:
                id: '$response.body#/id'
              operationId: getProgramItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /programs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Program:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Program:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Program-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Program-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Program-write'
        description: 'The new Program resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/programs/{id}':
    get:
      tags:
        - Program
      operationId: getProgramItem
      summary: 'Retrieves a Program resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Program resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Program:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Program:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Program-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Program-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Program-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Program
      operationId: deleteProgramItem
      summary: 'Removes the Program resource.'
      responses:
        204:
          description: 'Program resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Program
      operationId: putProgramItem
      summary: 'Replaces the Program resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Program resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Program:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Program:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Program-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Program-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Program-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Program:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Program:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Program-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Program-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Program-write'
        description: 'The updated Program resource'
    patch:
      tags:
        - Program
      operationId: patchProgramItem
      summary: 'Updates the Program resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Program resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Program:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Program:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Program-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Program-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Program-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Program-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Program:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Program-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Program-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Program-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Program-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Program-write'
        description: 'The updated Program resource'
  '/programs/{id}/courses':
    get:
      tags:
        - Course
        - Program
      operationId: api_programs_courses_get_subresource
      summary: 'Retrieves the collection of Course resources.'
      responses:
        200:
          description: 'Course collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Course:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Course:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course-read'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: additionalType
          in: query
          required: false
          schema:
            type: string
        -
          name: organization
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
  '/programs/{id}/participants':
    get:
      tags:
        - Participant
        - Program
      operationId: api_programs_participants_get_subresource
      summary: 'Retrieves the collection of Participant resources.'
      responses:
        200:
          description: 'Participant collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participant:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Participant:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant-read'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[person]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[status]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateOfAcceptance]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[motivation]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateOfAcceptance[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateOfAcceptance[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateOfAcceptance[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateOfAcceptance[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: person
          in: query
          required: false
          schema:
            type: string
        -
          name: 'person[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: course.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'course.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: program.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'program.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: results.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'results.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
  /questions:
    get:
      tags:
        - Question
      operationId: getQuestionCollection
      summary: 'Retrieves the collection of Question resources.'
      responses:
        200:
          description: 'Question collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Question:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Question:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Question
      operationId: postQuestionCollection
      summary: 'Creates a Question resource.'
      responses:
        201:
          description: 'Question resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Question-read'
          links:
            GetQuestionItem:
              parameters:
                id: '$response.body#/id'
              operationId: getQuestionItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /questions/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Question:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Question:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Question-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Question-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Question-write'
        description: 'The new Question resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/questions/{id}':
    get:
      tags:
        - Question
      operationId: getQuestionItem
      summary: 'Retrieves a Question resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Question resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Question-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Question
      operationId: deleteQuestionItem
      summary: 'Removes the Question resource.'
      responses:
        204:
          description: 'Question resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Question
      operationId: putQuestionItem
      summary: 'Replaces the Question resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Question resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Question-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Question:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Question:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Question-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Question-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Question-write'
        description: 'The updated Question resource'
    patch:
      tags:
        - Question
      operationId: patchQuestionItem
      summary: 'Updates the Question resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Question resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Question:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Question-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Question-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Question-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Question:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Question-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Question-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Question-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Question-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Question-write'
        description: 'The updated Question resource'
  /results:
    get:
      tags:
        - Result
      operationId: getResultCollection
      summary: 'Retrieves the collection of Result resources.'
      responses:
        200:
          description: 'Result collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Result:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Result:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Result-read'
      parameters:
        -
          name: participant.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'participant.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: activity.id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'activity.id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Result
      operationId: postResultCollection
      summary: 'Creates a Result resource.'
      responses:
        201:
          description: 'Result resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Result-read'
          links:
            GetResultItem:
              parameters:
                id: '$response.body#/id'
              operationId: getResultItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /results/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Result:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Result:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Result-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Result-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Result-write'
        description: 'The new Result resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/results/{id}':
    get:
      tags:
        - Result
      operationId: getResultItem
      summary: 'Retrieves a Result resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Result resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Result-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Result
      operationId: deleteResultItem
      summary: 'Removes the Result resource.'
      responses:
        204:
          description: 'Result resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Result
      operationId: putResultItem
      summary: 'Replaces the Result resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Result resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Result-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Result:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Result:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Result-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Result-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Result-write'
        description: 'The updated Result resource'
    patch:
      tags:
        - Result
      operationId: patchResultItem
      summary: 'Updates the Result resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Result resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Result:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Result-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Result-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Result-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Result:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Result-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Result-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Result-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Result-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Result-write'
        description: 'The updated Result resource'
  /reviews:
    get:
      tags:
        - Review
      operationId: getReviewCollection
      summary: 'Retrieves the collection of Review resources.'
      responses:
        200:
          description: 'Review collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Review:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Review:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Review
      operationId: postReviewCollection
      summary: 'Creates a Review resource.'
      responses:
        201:
          description: 'Review resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Review:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Review:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Review-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Review-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Review-read'
          links:
            GetReviewItem:
              parameters:
                id: '$response.body#/id'
              operationId: getReviewItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /reviews/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Review:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Review:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Review-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Review-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Review-write'
        description: 'The new Review resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/reviews/{id}':
    get:
      tags:
        - Review
      operationId: getReviewItem
      summary: 'Retrieves a Review resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Review resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Review:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Review:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Review-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Review-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Review-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Review
      operationId: deleteReviewItem
      summary: 'Removes the Review resource.'
      responses:
        204:
          description: 'Review resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Review
      operationId: putReviewItem
      summary: 'Replaces the Review resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Review resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Review:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Review:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Review-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Review-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Review-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Review:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Review:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Review-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Review-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Review-write'
        description: 'The updated Review resource'
    patch:
      tags:
        - Review
      operationId: patchReviewItem
      summary: 'Updates the Review resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Review resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Review:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Review:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Review-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Review-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Review-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Review-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Review:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Review-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Review-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Review-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Review-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Review-write'
        description: 'The updated Review resource'
  /stages:
    get:
      tags:
        - Stage
      operationId: getStageCollection
      summary: 'Retrieves the collection of Stage resources.'
      responses:
        200:
          description: 'Stage collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Stage:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Stage:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stage-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stage-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stage-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stage-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stage-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stage-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stage-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stage-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stage-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stage-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stage-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Stage
      operationId: postStageCollection
      summary: 'Creates a Stage resource.'
      responses:
        201:
          description: 'Stage resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Stage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Stage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Stage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Stage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Stage-read'
          links:
            GetStageItem:
              parameters:
                id: '$response.body#/id'
              operationId: getStageItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /stages/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Stage:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Stage:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Stage-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Stage-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Stage-write'
        description: 'The new Stage resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/stages/{id}':
    get:
      tags:
        - Stage
      operationId: getStageItem
      summary: 'Retrieves a Stage resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Stage resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Stage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Stage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Stage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Stage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Stage-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Stage
      operationId: deleteStageItem
      summary: 'Removes the Stage resource.'
      responses:
        204:
          description: 'Stage resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Stage
      operationId: putStageItem
      summary: 'Replaces the Stage resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Stage resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Stage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Stage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Stage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Stage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Stage-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Stage:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Stage:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Stage-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Stage-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Stage-write'
        description: 'The updated Stage resource'
    patch:
      tags:
        - Stage
      operationId: patchStageItem
      summary: 'Updates the Stage resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Stage resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Stage:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Stage:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Stage-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Stage-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Stage-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Stage-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Stage:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Stage-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Stage-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Stage-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Stage-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Stage-write'
        description: 'The updated Stage resource'
  /tests:
    get:
      tags:
        - Test
      operationId: getTestCollection
      summary: 'Retrieves the collection of Test resources.'
      responses:
        200:
          description: 'Test collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Test:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Test:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Test-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Test
      operationId: postTestCollection
      summary: 'Creates a Test resource.'
      responses:
        201:
          description: 'Test resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Test:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Test:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Test-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Test-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Test-read'
          links:
            GetTestItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTestItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /tests/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Test:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Test:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Test-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Test-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Test-write'
        description: 'The new Test resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/tests/{id}':
    get:
      tags:
        - Test
      operationId: getTestItem
      summary: 'Retrieves a Test resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Test resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Test:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Test:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Test-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Test-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Test-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Test
      operationId: deleteTestItem
      summary: 'Removes the Test resource.'
      responses:
        204:
          description: 'Test resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Test
      operationId: putTestItem
      summary: 'Replaces the Test resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Test resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Test:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Test:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Test-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Test-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Test-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Test:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Test:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Test-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Test-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Test-write'
        description: 'The updated Test resource'
    patch:
      tags:
        - Test
      operationId: patchTestItem
      summary: 'Updates the Test resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Test resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Test:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Test:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Test-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Test-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Test-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Test-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Test:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Test-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Test-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Test-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Test-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Test-write'
        description: 'The updated Test resource'
components:
  schemas:
    Activity-read:
      type: object
      description: 'An activity like a class on a cource.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this Activity.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Activity.'
          type: string
        description:
          description: 'The description of this Activity.'
          type: string
          nullable: true
        needsReview:
          description: 'Denotes if this activity needs a review with a rating before it can be completed.'
          type: boolean
        course:
          $ref: '#/components/schemas/Course-read'
        educationalUse:
          description: 'Could be ''assignment'', ''group work'' or ''test''.'
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result-read'
        dateCreated:
          description: 'The moment this Activity was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Activity was last Modified'
          type: string
          format: date-time
          nullable: true
        tests:
          type: array
          items:
            $ref: '#/components/schemas/Test-read'
      required:
        - name
    Activity-write:
      type: object
      description: 'An activity like a class on a cource.'
      required:
        - name
      properties:
        name:
          description: 'The name of this Activity.'
          type: string
        description:
          description: 'The description of this Activity.'
          type: string
          nullable: true
        needsReview:
          description: 'Denotes if this activity needs a review with a rating before it can be completed.'
          type: boolean
        course:
          $ref: '#/components/schemas/Course-write'
        educationalUse:
          description: 'Could be ''assignment'', ''group work'' or ''test''.'
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result-write'
        tests:
          type: array
          items:
            $ref: '#/components/schemas/Test-write'
    'Activity:jsonld-read':
      type: object
      description: 'An activity like a class on a cource.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this Activity.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Activity.'
          type: string
        description:
          description: 'The description of this Activity.'
          type: string
          nullable: true
        needsReview:
          description: 'Denotes if this activity needs a review with a rating before it can be completed.'
          type: boolean
        course:
          $ref: '#/components/schemas/Course:jsonld-read'
        educationalUse:
          description: 'Could be ''assignment'', ''group work'' or ''test''.'
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result:jsonld-read'
        dateCreated:
          description: 'The moment this Activity was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Activity was last Modified'
          type: string
          format: date-time
          nullable: true
        tests:
          type: array
          items:
            $ref: '#/components/schemas/Test:jsonld-read'
      required:
        - name
    'Activity:jsonld-write':
      type: object
      description: 'An activity like a class on a cource.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Activity.'
          type: string
        description:
          description: 'The description of this Activity.'
          type: string
          nullable: true
        needsReview:
          description: 'Denotes if this activity needs a review with a rating before it can be completed.'
          type: boolean
        course:
          $ref: '#/components/schemas/Course:jsonld-write'
        educationalUse:
          description: 'Could be ''assignment'', ''group work'' or ''test''.'
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result:jsonld-write'
        tests:
          type: array
          items:
            $ref: '#/components/schemas/Test:jsonld-write'
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Course-read:
      type: object
      description: 'A Course is a course within a program in which participants can participate. Based on https://schema.org/Course.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this Course.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Course.'
          type: string
        organization:
          description: 'The uri of the submitter (organization)'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        description:
          description: 'The description of this Course.'
          type: string
          nullable: true
        text:
          description: 'The actual content of this Course.'
          type: string
          nullable: true
        courseCode:
          description: 'The courseCode of this Course.'
          type: string
          nullable: true
        coursePrerequisites:
          description: 'The coursePrerequisites of this Course.'
          type: array
          items:
            type: string
          nullable: true
        hasCourseInstance:
          description: 'An instance of a Course which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.'
          type: string
          nullable: true
        numberOfCredits:
          description: 'The numberOfCredits of this Course.'
          type: integer
          nullable: true
        occupationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        educationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result-read'
        dateCreated:
          description: 'The moment this Course was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Course was last Modified'
          type: string
          format: date-time
          nullable: true
        programs:
          type: array
          items:
            $ref: '#/components/schemas/Program-read'
        educationEvents:
          type: array
          items:
            $ref: '#/components/schemas/EducationEvent-read'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity-read'
        skills:
          description: 'An array of URLs pointing to skills related to this course'
          type: array
          items:
            type: string
          nullable: true
        competences:
          description: 'An array of URLs pointing to competences this course teaches the participant'
          type: array
          items:
            type: string
          nullable: true
        products:
          description: 'An array of URLs pointing to products from the pdc related to this course'
          type: array
          items:
            type: string
          nullable: true
        additionalType:
          description: 'The Type of this course.'
          type: string
          nullable: true
        video:
          description: 'The url linking to a video which belongs to this course'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        timeRequired:
          description: 'The time Required to complete this Course.'
          type: string
          nullable: true
      required:
        - name
        - organization
    Course-write:
      type: object
      description: 'A Course is a course within a program in which participants can participate. Based on https://schema.org/Course.'
      required:
        - name
        - organization
      properties:
        name:
          description: 'The name of this Course.'
          type: string
        organization:
          description: 'The uri of the submitter (organization)'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        description:
          description: 'The description of this Course.'
          type: string
          nullable: true
        text:
          description: 'The actual content of this Course.'
          type: string
          nullable: true
        courseCode:
          description: 'The courseCode of this Course.'
          type: string
          nullable: true
        coursePrerequisites:
          description: 'The coursePrerequisites of this Course.'
          type: array
          items:
            type: string
          nullable: true
        hasCourseInstance:
          description: 'An instance of a Course which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.'
          type: string
          nullable: true
        numberOfCredits:
          description: 'The numberOfCredits of this Course.'
          type: integer
          nullable: true
        occupationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        educationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result-write'
        programs:
          type: array
          items:
            $ref: '#/components/schemas/Program-write'
        educationEvents:
          type: array
          items:
            $ref: '#/components/schemas/EducationEvent-write'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity-write'
        skills:
          description: 'An array of URLs pointing to skills related to this course'
          type: array
          items:
            type: string
          nullable: true
        competences:
          description: 'An array of URLs pointing to competences this course teaches the participant'
          type: array
          items:
            type: string
          nullable: true
        products:
          description: 'An array of URLs pointing to products from the pdc related to this course'
          type: array
          items:
            type: string
          nullable: true
        additionalType:
          description: 'The Type of this course.'
          type: string
          nullable: true
        video:
          description: 'The url linking to a video which belongs to this course'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        timeRequired:
          description: 'The time Required to complete this Course.'
          type: string
          nullable: true
    'Course:jsonld-read':
      type: object
      description: 'A Course is a course within a program in which participants can participate. Based on https://schema.org/Course.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this Course.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Course.'
          type: string
        organization:
          description: 'The uri of the submitter (organization)'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        description:
          description: 'The description of this Course.'
          type: string
          nullable: true
        text:
          description: 'The actual content of this Course.'
          type: string
          nullable: true
        courseCode:
          description: 'The courseCode of this Course.'
          type: string
          nullable: true
        coursePrerequisites:
          description: 'The coursePrerequisites of this Course.'
          type: array
          items:
            type: string
          nullable: true
        hasCourseInstance:
          description: 'An instance of a Course which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.'
          type: string
          nullable: true
        numberOfCredits:
          description: 'The numberOfCredits of this Course.'
          type: integer
          nullable: true
        occupationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        educationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result:jsonld-read'
        dateCreated:
          description: 'The moment this Course was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Course was last Modified'
          type: string
          format: date-time
          nullable: true
        programs:
          type: array
          items:
            $ref: '#/components/schemas/Program:jsonld-read'
        educationEvents:
          type: array
          items:
            $ref: '#/components/schemas/EducationEvent:jsonld-read'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity:jsonld-read'
        skills:
          description: 'An array of URLs pointing to skills related to this course'
          type: array
          items:
            type: string
          nullable: true
        competences:
          description: 'An array of URLs pointing to competences this course teaches the participant'
          type: array
          items:
            type: string
          nullable: true
        products:
          description: 'An array of URLs pointing to products from the pdc related to this course'
          type: array
          items:
            type: string
          nullable: true
        additionalType:
          description: 'The Type of this course.'
          type: string
          nullable: true
        video:
          description: 'The url linking to a video which belongs to this course'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        timeRequired:
          description: 'The time Required to complete this Course.'
          type: string
          nullable: true
      required:
        - name
        - organization
    'Course:jsonld-write':
      type: object
      description: 'A Course is a course within a program in which participants can participate. Based on https://schema.org/Course.'
      required:
        - name
        - organization
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Course.'
          type: string
        organization:
          description: 'The uri of the submitter (organization)'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        description:
          description: 'The description of this Course.'
          type: string
          nullable: true
        text:
          description: 'The actual content of this Course.'
          type: string
          nullable: true
        courseCode:
          description: 'The courseCode of this Course.'
          type: string
          nullable: true
        coursePrerequisites:
          description: 'The coursePrerequisites of this Course.'
          type: array
          items:
            type: string
          nullable: true
        hasCourseInstance:
          description: 'An instance of a Course which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.'
          type: string
          nullable: true
        numberOfCredits:
          description: 'The numberOfCredits of this Course.'
          type: integer
          nullable: true
        occupationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        educationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result:jsonld-write'
        programs:
          type: array
          items:
            $ref: '#/components/schemas/Program:jsonld-write'
        educationEvents:
          type: array
          items:
            $ref: '#/components/schemas/EducationEvent:jsonld-write'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/Activity:jsonld-write'
        skills:
          description: 'An array of URLs pointing to skills related to this course'
          type: array
          items:
            type: string
          nullable: true
        competences:
          description: 'An array of URLs pointing to competences this course teaches the participant'
          type: array
          items:
            type: string
          nullable: true
        products:
          description: 'An array of URLs pointing to products from the pdc related to this course'
          type: array
          items:
            type: string
          nullable: true
        additionalType:
          description: 'The Type of this course.'
          type: string
          nullable: true
        video:
          description: 'The url linking to a video which belongs to this course'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        timeRequired:
          description: 'The time Required to complete this Course.'
          type: string
          nullable: true
    EducationEvent-read:
      type: object
      description: 'An EducationEvent is a (online) meeting, college etc. of a course.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this EducationEvent.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this EducationEvent.'
          type: string
        description:
          description: 'The description of this EducationEvent.'
          type: string
          nullable: true
        assesses:
          description: 'The assesses of this EducationEvent.'
          type: string
          nullable: true
        educationalLevel:
          description: 'The educationalLevel of this EducationEvent.'
          type: string
          nullable: true
        teaches:
          description: 'The teaches of this EducationEvent.'
          type: string
          nullable: true
        startDate:
          description: 'The moment this EducationEvent starts.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The moment this EducationEvent ends.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this EducationEvent was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this EducationEvent was last Modified'
          type: string
          format: date-time
          nullable: true
        course:
          $ref: '#/components/schemas/Course-read'
      required:
        - name
    EducationEvent-write:
      type: object
      description: 'An EducationEvent is a (online) meeting, college etc. of a course.'
      required:
        - name
      properties:
        name:
          description: 'The name of this EducationEvent.'
          type: string
        description:
          description: 'The description of this EducationEvent.'
          type: string
          nullable: true
        assesses:
          description: 'The assesses of this EducationEvent.'
          type: string
          nullable: true
        educationalLevel:
          description: 'The educationalLevel of this EducationEvent.'
          type: string
          nullable: true
        teaches:
          description: 'The teaches of this EducationEvent.'
          type: string
          nullable: true
        startDate:
          description: 'The moment this EducationEvent starts.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The moment this EducationEvent ends.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        course:
          $ref: '#/components/schemas/Course-write'
    'EducationEvent:jsonld-read':
      type: object
      description: 'An EducationEvent is a (online) meeting, college etc. of a course.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this EducationEvent.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this EducationEvent.'
          type: string
        description:
          description: 'The description of this EducationEvent.'
          type: string
          nullable: true
        assesses:
          description: 'The assesses of this EducationEvent.'
          type: string
          nullable: true
        educationalLevel:
          description: 'The educationalLevel of this EducationEvent.'
          type: string
          nullable: true
        teaches:
          description: 'The teaches of this EducationEvent.'
          type: string
          nullable: true
        startDate:
          description: 'The moment this EducationEvent starts.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The moment this EducationEvent ends.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this EducationEvent was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this EducationEvent was last Modified'
          type: string
          format: date-time
          nullable: true
        course:
          $ref: '#/components/schemas/Course:jsonld-read'
      required:
        - name
    'EducationEvent:jsonld-write':
      type: object
      description: 'An EducationEvent is a (online) meeting, college etc. of a course.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this EducationEvent.'
          type: string
        description:
          description: 'The description of this EducationEvent.'
          type: string
          nullable: true
        assesses:
          description: 'The assesses of this EducationEvent.'
          type: string
          nullable: true
        educationalLevel:
          description: 'The educationalLevel of this EducationEvent.'
          type: string
          nullable: true
        teaches:
          description: 'The teaches of this EducationEvent.'
          type: string
          nullable: true
        startDate:
          description: 'The moment this EducationEvent starts.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The moment this EducationEvent ends.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        course:
          $ref: '#/components/schemas/Course:jsonld-write'
    Group-read:
      type: object
      description: 'An activity like a class on a cource.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this Participant.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Group.'
          type: string
        description:
          description: 'The description of this Group.'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this Participant was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Participant was last Modified'
          type: string
          format: date-time
          nullable: true
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant-read'
      required:
        - name
    Group-write:
      type: object
      description: 'An activity like a class on a cource.'
      required:
        - name
      properties:
        name:
          description: 'The name of this Group.'
          type: string
        description:
          description: 'The description of this Group.'
          type: string
          nullable: true
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant-write'
    'Group:jsonld-read':
      type: object
      description: 'An activity like a class on a cource.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this Participant.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Group.'
          type: string
        description:
          description: 'The description of this Group.'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this Participant was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Participant was last Modified'
          type: string
          format: date-time
          nullable: true
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant:jsonld-read'
      required:
        - name
    'Group:jsonld-write':
      type: object
      description: 'An activity like a class on a cource.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Group.'
          type: string
        description:
          description: 'The description of this Group.'
          type: string
          nullable: true
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant:jsonld-write'
    Participant-read:
      type: object
      description: 'A Participant is a person who participates in a Course or an Program.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this Participant.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        person:
          description: 'The contact of this Participant.'
          type: string
        program:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Program-read'
        course:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Course-read'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result-read'
        dateCreated:
          description: 'The moment this Participant was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Participant was last Modified'
          type: string
          format: date-time
          nullable: true
        status:
          description: 'The status of this Participant.'
          type: string
          nullable: true
        dateOfAcceptance:
          description: 'The date of acceptance of this Participant.'
          type: string
          format: date-time
          nullable: true
        motivation:
          description: 'The motivation of this Participant.'
          type: string
          nullable: true
        groupColumn:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Group-read'
      required:
        - person
    Participant-write:
      type: object
      description: 'A Participant is a person who participates in a Course or an Program.'
      required:
        - person
      properties:
        person:
          description: 'The contact of this Participant.'
          type: string
        program:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Program-write'
        course:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Course-write'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result-write'
        status:
          description: 'The status of this Participant.'
          type: string
          nullable: true
        dateOfAcceptance:
          description: 'The date of acceptance of this Participant.'
          type: string
          format: date-time
          nullable: true
        motivation:
          description: 'The motivation of this Participant.'
          type: string
          nullable: true
        groupColumn:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Group-write'
    'Participant:jsonld-read':
      type: object
      description: 'A Participant is a person who participates in a Course or an Program.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this Participant.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        person:
          description: 'The contact of this Participant.'
          type: string
        program:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Program:jsonld-read'
        course:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Course:jsonld-read'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result:jsonld-read'
        dateCreated:
          description: 'The moment this Participant was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Participant was last Modified'
          type: string
          format: date-time
          nullable: true
        status:
          description: 'The status of this Participant.'
          type: string
          nullable: true
        dateOfAcceptance:
          description: 'The date of acceptance of this Participant.'
          type: string
          format: date-time
          nullable: true
        motivation:
          description: 'The motivation of this Participant.'
          type: string
          nullable: true
        groupColumn:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Group:jsonld-read'
      required:
        - person
    'Participant:jsonld-write':
      type: object
      description: 'A Participant is a person who participates in a Course or an Program.'
      required:
        - person
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        person:
          description: 'The contact of this Participant.'
          type: string
        program:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Program:jsonld-write'
        course:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Course:jsonld-write'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result:jsonld-write'
        status:
          description: 'The status of this Participant.'
          type: string
          nullable: true
        dateOfAcceptance:
          description: 'The date of acceptance of this Participant.'
          type: string
          format: date-time
          nullable: true
        motivation:
          description: 'The motivation of this Participant.'
          type: string
          nullable: true
        groupColumn:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Group:jsonld-write'
    Program-read:
      type: object
      description: 'A Program is a EducationalOccupationalProgram offered by an institution which determines the learning progress to achieve an outcome, usually a credential like a degree or certificate. Based on https://schema.org/EducationalOccupationalProgram.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this Program.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Program.'
          type: string
        description:
          description: 'The description of this Program.'
          type: string
          nullable: true
        applicationStartDate:
          description: 'The day that people can start to apply for this Program.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        applicationDeadline:
          description: 'The day that people can no longer apply for this Program.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        startDate:
          description: 'The moment this Program starts.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The moment this Program ends.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        financialAidEligible:
          description: 'The financialAidEligible of this Program.'
          type: string
          nullable: true
        maximumEnrollment:
          description: 'The maximum number of students who may be enrolled in the program..'
          type: integer
          nullable: true
        numberOfCredits:
          description: 'The numberOfCredits of this Program.'
          type: integer
          nullable: true
        occupationalCategory:
          description: 'A category describing the job, preferably using a term from a taxonomy such as BLS O*NET-SOC, ISCO-08 or similar.'
          type: string
          nullable: true
        occupationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        educationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        educationalProgramMode:
          description: 'The educationalProgramMode of this Program.'
          type: string
          nullable: true
        offers:
          description: 'The offers of this Program.'
          type: string
          nullable: true
        programPrerequisites:
          description: 'The programPrerequisites of this Program.'
          type: array
          items:
            type: string
          nullable: true
        programType:
          description: 'The programType of this Program.'
          type: string
          nullable: true
        provider:
          description: 'The provider of this Program.'
          type: string
          nullable: true
        salaryUponCompletion:
          description: 'The salaryUponCompletion of this Program.'
          type: string
          nullable: true
        termDuration:
          description: 'The termDuration of this Program.'
          type: string
          nullable: true
        termsPerYear:
          description: 'The termsPerYear of this Program.'
          type: integer
          nullable: true
        dayOfWeek:
          description: 'The dayOfWeek of this Program.'
          type: string
          nullable: true
        timeOfDay:
          description: 'The timeOfDay of this Program.'
          type: string
          nullable: true
        timeToComplete:
          description: 'The timeToComplete of this Program.'
          type: string
          nullable: true
        trainingSalary:
          description: 'The trainingSalary of this Program.'
          type: string
          nullable: true
        typicalCreditsPerTerm:
          description: 'The typicalCreditsPerTerm of this Program.'
          type: integer
          nullable: true
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant-read'
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Course-read'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result-read'
        dateCreated:
          description: 'The moment this Program was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Program was last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Program-write:
      type: object
      description: 'A Program is a EducationalOccupationalProgram offered by an institution which determines the learning progress to achieve an outcome, usually a credential like a degree or certificate. Based on https://schema.org/EducationalOccupationalProgram.'
      required:
        - name
      properties:
        name:
          description: 'The name of this Program.'
          type: string
        description:
          description: 'The description of this Program.'
          type: string
          nullable: true
        applicationStartDate:
          description: 'The day that people can start to apply for this Program.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        applicationDeadline:
          description: 'The day that people can no longer apply for this Program.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        startDate:
          description: 'The moment this Program starts.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The moment this Program ends.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        financialAidEligible:
          description: 'The financialAidEligible of this Program.'
          type: string
          nullable: true
        maximumEnrollment:
          description: 'The maximum number of students who may be enrolled in the program..'
          type: integer
          nullable: true
        numberOfCredits:
          description: 'The numberOfCredits of this Program.'
          type: integer
          nullable: true
        occupationalCategory:
          description: 'A category describing the job, preferably using a term from a taxonomy such as BLS O*NET-SOC, ISCO-08 or similar.'
          type: string
          nullable: true
        occupationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        educationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        educationalProgramMode:
          description: 'The educationalProgramMode of this Program.'
          type: string
          nullable: true
        offers:
          description: 'The offers of this Program.'
          type: string
          nullable: true
        programPrerequisites:
          description: 'The programPrerequisites of this Program.'
          type: array
          items:
            type: string
          nullable: true
        programType:
          description: 'The programType of this Program.'
          type: string
          nullable: true
        provider:
          description: 'The provider of this Program.'
          type: string
          nullable: true
        salaryUponCompletion:
          description: 'The salaryUponCompletion of this Program.'
          type: string
          nullable: true
        termDuration:
          description: 'The termDuration of this Program.'
          type: string
          nullable: true
        termsPerYear:
          description: 'The termsPerYear of this Program.'
          type: integer
          nullable: true
        dayOfWeek:
          description: 'The dayOfWeek of this Program.'
          type: string
          nullable: true
        timeOfDay:
          description: 'The timeOfDay of this Program.'
          type: string
          nullable: true
        timeToComplete:
          description: 'The timeToComplete of this Program.'
          type: string
          nullable: true
        trainingSalary:
          description: 'The trainingSalary of this Program.'
          type: string
          nullable: true
        typicalCreditsPerTerm:
          description: 'The typicalCreditsPerTerm of this Program.'
          type: integer
          nullable: true
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant-write'
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Course-write'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result-write'
    'Program:jsonld-read':
      type: object
      description: 'A Program is a EducationalOccupationalProgram offered by an institution which determines the learning progress to achieve an outcome, usually a credential like a degree or certificate. Based on https://schema.org/EducationalOccupationalProgram.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this Program.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Program.'
          type: string
        description:
          description: 'The description of this Program.'
          type: string
          nullable: true
        applicationStartDate:
          description: 'The day that people can start to apply for this Program.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        applicationDeadline:
          description: 'The day that people can no longer apply for this Program.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        startDate:
          description: 'The moment this Program starts.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The moment this Program ends.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        financialAidEligible:
          description: 'The financialAidEligible of this Program.'
          type: string
          nullable: true
        maximumEnrollment:
          description: 'The maximum number of students who may be enrolled in the program..'
          type: integer
          nullable: true
        numberOfCredits:
          description: 'The numberOfCredits of this Program.'
          type: integer
          nullable: true
        occupationalCategory:
          description: 'A category describing the job, preferably using a term from a taxonomy such as BLS O*NET-SOC, ISCO-08 or similar.'
          type: string
          nullable: true
        occupationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        educationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        educationalProgramMode:
          description: 'The educationalProgramMode of this Program.'
          type: string
          nullable: true
        offers:
          description: 'The offers of this Program.'
          type: string
          nullable: true
        programPrerequisites:
          description: 'The programPrerequisites of this Program.'
          type: array
          items:
            type: string
          nullable: true
        programType:
          description: 'The programType of this Program.'
          type: string
          nullable: true
        provider:
          description: 'The provider of this Program.'
          type: string
          nullable: true
        salaryUponCompletion:
          description: 'The salaryUponCompletion of this Program.'
          type: string
          nullable: true
        termDuration:
          description: 'The termDuration of this Program.'
          type: string
          nullable: true
        termsPerYear:
          description: 'The termsPerYear of this Program.'
          type: integer
          nullable: true
        dayOfWeek:
          description: 'The dayOfWeek of this Program.'
          type: string
          nullable: true
        timeOfDay:
          description: 'The timeOfDay of this Program.'
          type: string
          nullable: true
        timeToComplete:
          description: 'The timeToComplete of this Program.'
          type: string
          nullable: true
        trainingSalary:
          description: 'The trainingSalary of this Program.'
          type: string
          nullable: true
        typicalCreditsPerTerm:
          description: 'The typicalCreditsPerTerm of this Program.'
          type: integer
          nullable: true
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant:jsonld-read'
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Course:jsonld-read'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result:jsonld-read'
        dateCreated:
          description: 'The moment this Program was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Program was last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    'Program:jsonld-write':
      type: object
      description: 'A Program is a EducationalOccupationalProgram offered by an institution which determines the learning progress to achieve an outcome, usually a credential like a degree or certificate. Based on https://schema.org/EducationalOccupationalProgram.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Program.'
          type: string
        description:
          description: 'The description of this Program.'
          type: string
          nullable: true
        applicationStartDate:
          description: 'The day that people can start to apply for this Program.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        applicationDeadline:
          description: 'The day that people can no longer apply for this Program.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        startDate:
          description: 'The moment this Program starts.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        endDate:
          description: 'The moment this Program ends.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        financialAidEligible:
          description: 'The financialAidEligible of this Program.'
          type: string
          nullable: true
        maximumEnrollment:
          description: 'The maximum number of students who may be enrolled in the program..'
          type: integer
          nullable: true
        numberOfCredits:
          description: 'The numberOfCredits of this Program.'
          type: integer
          nullable: true
        occupationalCategory:
          description: 'A category describing the job, preferably using a term from a taxonomy such as BLS O*NET-SOC, ISCO-08 or similar.'
          type: string
          nullable: true
        occupationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        educationalCredentialAwarded:
          description: 'A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.'
          type: string
          nullable: true
        educationalProgramMode:
          description: 'The educationalProgramMode of this Program.'
          type: string
          nullable: true
        offers:
          description: 'The offers of this Program.'
          type: string
          nullable: true
        programPrerequisites:
          description: 'The programPrerequisites of this Program.'
          type: array
          items:
            type: string
          nullable: true
        programType:
          description: 'The programType of this Program.'
          type: string
          nullable: true
        provider:
          description: 'The provider of this Program.'
          type: string
          nullable: true
        salaryUponCompletion:
          description: 'The salaryUponCompletion of this Program.'
          type: string
          nullable: true
        termDuration:
          description: 'The termDuration of this Program.'
          type: string
          nullable: true
        termsPerYear:
          description: 'The termsPerYear of this Program.'
          type: integer
          nullable: true
        dayOfWeek:
          description: 'The dayOfWeek of this Program.'
          type: string
          nullable: true
        timeOfDay:
          description: 'The timeOfDay of this Program.'
          type: string
          nullable: true
        timeToComplete:
          description: 'The timeToComplete of this Program.'
          type: string
          nullable: true
        trainingSalary:
          description: 'The trainingSalary of this Program.'
          type: string
          nullable: true
        typicalCreditsPerTerm:
          description: 'The typicalCreditsPerTerm of this Program.'
          type: integer
          nullable: true
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant:jsonld-write'
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Course:jsonld-write'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result:jsonld-write'
    Question-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this Question.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Question.'
          type: string
        description:
          description: 'The Question.'
          type: string
        dateCreated:
          description: 'The moment this Question was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Question was last Modified'
          type: string
          format: date-time
          nullable: true
        start:
          readOnly: true
          description: 'Denotes if this question is the first question of the stage'
          type: boolean
        end:
          readOnly: true
          description: 'Denotes if this question is the last question of the stage'
          type: boolean
        next:
          readOnly: true
        previous:
          readOnly: true
        answer:
          description: 'The Answer to this Question.'
          type: string
        answerOptions:
          description: 'The answerOptions of this Question.'
          type: array
          items:
            type: string
          nullable: true
        stage:
          description: 'the stage this stage belongs to'
          $ref: '#/components/schemas/Stage-read'
        orderNumber:
          description: 'The place in the order where the question should be rendered'
          type: integer
      required:
        - name
        - description
        - answer
        - orderNumber
    Question-write:
      type: object
      description: ''
      required:
        - name
        - description
        - answer
        - orderNumber
      properties:
        name:
          description: 'The name of this Question.'
          type: string
        description:
          description: 'The Question.'
          type: string
        answer:
          description: 'The Answer to this Question.'
          type: string
        answerOptions:
          description: 'The answerOptions of this Question.'
          type: array
          items:
            type: string
          nullable: true
        stage:
          description: 'the stage this stage belongs to'
          $ref: '#/components/schemas/Stage-write'
        orderNumber:
          description: 'The place in the order where the question should be rendered'
          type: integer
    'Question:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this Question.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Question.'
          type: string
        description:
          description: 'The Question.'
          type: string
        dateCreated:
          description: 'The moment this Question was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Question was last Modified'
          type: string
          format: date-time
          nullable: true
        start:
          readOnly: true
          description: 'Denotes if this question is the first question of the stage'
          type: boolean
        end:
          readOnly: true
          description: 'Denotes if this question is the last question of the stage'
          type: boolean
        next:
          readOnly: true
        previous:
          readOnly: true
        answer:
          description: 'The Answer to this Question.'
          type: string
        answerOptions:
          description: 'The answerOptions of this Question.'
          type: array
          items:
            type: string
          nullable: true
        stage:
          description: 'the stage this stage belongs to'
          $ref: '#/components/schemas/Stage:jsonld-read'
        orderNumber:
          description: 'The place in the order where the question should be rendered'
          type: integer
      required:
        - name
        - description
        - answer
        - orderNumber
    'Question:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - description
        - answer
        - orderNumber
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Question.'
          type: string
        description:
          description: 'The Question.'
          type: string
        answer:
          description: 'The Answer to this Question.'
          type: string
        answerOptions:
          description: 'The answerOptions of this Question.'
          type: array
          items:
            type: string
          nullable: true
        stage:
          description: 'the stage this stage belongs to'
          $ref: '#/components/schemas/Stage:jsonld-write'
        orderNumber:
          description: 'The place in the order where the question should be rendered'
          type: integer
    Result-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this Result.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Result.'
          type: string
        description:
          description: 'The description of this Result.'
          type: string
          nullable: true
        completionDate:
          description: 'The moment this Result had status: completed.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        participant:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Participant-read'
        activity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Activity-read'
        test:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Test-read'
        course:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Course-read'
        program:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Program-read'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review-read'
        dateCreated:
          description: 'The moment this Result was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Result was last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Result-write:
      type: object
      description: ''
      required:
        - name
      properties:
        name:
          description: 'The name of this Result.'
          type: string
        description:
          description: 'The description of this Result.'
          type: string
          nullable: true
        completionDate:
          description: 'The moment this Result had status: completed.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        participant:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Participant-write'
        activity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Activity-write'
        test:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Test-write'
        course:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Course-write'
        program:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Program-write'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review-write'
    'Result:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this Result.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Result.'
          type: string
        description:
          description: 'The description of this Result.'
          type: string
          nullable: true
        completionDate:
          description: 'The moment this Result had status: completed.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        participant:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Participant:jsonld-read'
        activity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Activity:jsonld-read'
        test:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Test:jsonld-read'
        course:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Course:jsonld-read'
        program:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Program:jsonld-read'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review:jsonld-read'
        dateCreated:
          description: 'The moment this Result was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Result was last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    'Result:jsonld-write':
      type: object
      description: ''
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Result.'
          type: string
        description:
          description: 'The description of this Result.'
          type: string
          nullable: true
        completionDate:
          description: 'The moment this Result had status: completed.'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        participant:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Participant:jsonld-write'
        activity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Activity:jsonld-write'
        test:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Test:jsonld-write'
        course:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Course:jsonld-write'
        program:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Program:jsonld-write'
        reviews:
          type: array
          items:
            $ref: '#/components/schemas/Review:jsonld-write'
    Review-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this Review.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Review.'
          type: string
        description:
          description: 'The description of this Review.'
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/Result-read'
        body:
          type: string
          nullable: true
        rating:
          type: integer
          nullable: true
        dateCreated:
          description: 'The moment this Review was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Review was last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Review-write:
      type: object
      description: ''
      required:
        - name
      properties:
        name:
          description: 'The name of this Review.'
          type: string
        description:
          description: 'The description of this Review.'
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/Result-write'
        body:
          type: string
          nullable: true
        rating:
          type: integer
          nullable: true
    'Review:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this Review.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Review.'
          type: string
        description:
          description: 'The description of this Review.'
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/Result:jsonld-read'
        body:
          type: string
          nullable: true
        rating:
          type: integer
          nullable: true
        dateCreated:
          description: 'The moment this Review was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Review was last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    'Review:jsonld-write':
      type: object
      description: ''
      required:
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Review.'
          type: string
        description:
          description: 'The description of this Review.'
          type: string
          nullable: true
        result:
          $ref: '#/components/schemas/Result:jsonld-write'
        body:
          type: string
          nullable: true
        rating:
          type: integer
          nullable: true
    Stage-read:
      type: object
      description: 'A stage within a test.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this Stage.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Stage.'
          type: string
        description:
          description: 'The description of this Stage.'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this Stage was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Stage was last Modified'
          type: string
          format: date-time
          nullable: true
        start:
          readOnly: true
          description: 'Whether or not this stage is the starting point of a test'
          type: boolean
        end:
          readOnly: true
          description: 'Whether or not this stage is the last point of a test'
          type: boolean
        next:
          readOnly: true
        previous:
          readOnly: true
        test:
          description: 'The test that this stage belongs to'
          $ref: '#/components/schemas/Test-read'
        questions:
          description: 'the questions of this stage'
          type: array
          items:
            $ref: '#/components/schemas/Question-read'
        orderNumber:
          description: 'The place in the order where the stage should be rendered'
          type: integer
      required:
        - name
        - test
        - orderNumber
    Stage-write:
      type: object
      description: 'A stage within a test.'
      required:
        - name
        - test
        - orderNumber
      properties:
        name:
          description: 'The name of this Stage.'
          type: string
        description:
          description: 'The description of this Stage.'
          type: string
          nullable: true
        test:
          description: 'The test that this stage belongs to'
          $ref: '#/components/schemas/Test-write'
        questions:
          description: 'the questions of this stage'
          type: array
          items:
            $ref: '#/components/schemas/Question-write'
        orderNumber:
          description: 'The place in the order where the stage should be rendered'
          type: integer
    'Stage:jsonld-read':
      type: object
      description: 'A stage within a test.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this Stage.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Stage.'
          type: string
        description:
          description: 'The description of this Stage.'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this Stage was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Stage was last Modified'
          type: string
          format: date-time
          nullable: true
        start:
          readOnly: true
          description: 'Whether or not this stage is the starting point of a test'
          type: boolean
        end:
          readOnly: true
          description: 'Whether or not this stage is the last point of a test'
          type: boolean
        next:
          readOnly: true
        previous:
          readOnly: true
        test:
          description: 'The test that this stage belongs to'
          $ref: '#/components/schemas/Test:jsonld-read'
        questions:
          description: 'the questions of this stage'
          type: array
          items:
            $ref: '#/components/schemas/Question:jsonld-read'
        orderNumber:
          description: 'The place in the order where the stage should be rendered'
          type: integer
      required:
        - name
        - test
        - orderNumber
    'Stage:jsonld-write':
      type: object
      description: 'A stage within a test.'
      required:
        - name
        - test
        - orderNumber
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Stage.'
          type: string
        description:
          description: 'The description of this Stage.'
          type: string
          nullable: true
        test:
          description: 'The test that this stage belongs to'
          $ref: '#/components/schemas/Test:jsonld-write'
        questions:
          description: 'the questions of this stage'
          type: array
          items:
            $ref: '#/components/schemas/Question:jsonld-write'
        orderNumber:
          description: 'The place in the order where the stage should be rendered'
          type: integer
    Test-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this Test.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Test.'
          type: string
        description:
          description: 'The description of this Test.'
          type: string
          nullable: true
        needsReview:
          description: 'Denotes if this test needs a review with a rating before it can be completed.'
          type: boolean
        dateCreated:
          description: 'The moment this Test was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Test was last Modified'
          type: string
          format: date-time
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result-read'
        activity:
          description: 'The activity that this test belongs to'
          $ref: '#/components/schemas/Activity-read'
        stages:
          description: 'The stages of this test'
          type: array
          items:
            $ref: '#/components/schemas/Stage-read'
      required:
        - name
        - activity
    Test-write:
      type: object
      description: ''
      required:
        - name
        - activity
      properties:
        name:
          description: 'The name of this Test.'
          type: string
        description:
          description: 'The description of this Test.'
          type: string
          nullable: true
        needsReview:
          description: 'Denotes if this test needs a review with a rating before it can be completed.'
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result-write'
        activity:
          description: 'The activity that this test belongs to'
          $ref: '#/components/schemas/Activity-write'
        stages:
          description: 'The stages of this test'
          type: array
          items:
            $ref: '#/components/schemas/Stage-write'
    'Test:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this Test.'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of this Test.'
          type: string
        description:
          description: 'The description of this Test.'
          type: string
          nullable: true
        needsReview:
          description: 'Denotes if this test needs a review with a rating before it can be completed.'
          type: boolean
        dateCreated:
          description: 'The moment this Test was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this Test was last Modified'
          type: string
          format: date-time
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result:jsonld-read'
        activity:
          description: 'The activity that this test belongs to'
          $ref: '#/components/schemas/Activity:jsonld-read'
        stages:
          description: 'The stages of this test'
          type: array
          items:
            $ref: '#/components/schemas/Stage:jsonld-read'
      required:
        - name
        - activity
    'Test:jsonld-write':
      type: object
      description: ''
      required:
        - name
        - activity
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this Test.'
          type: string
        description:
          description: 'The description of this Test.'
          type: string
          nullable: true
        needsReview:
          description: 'Denotes if this test needs a review with a rating before it can be completed.'
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/Result:jsonld-write'
        activity:
          description: 'The activity that this test belongs to'
          $ref: '#/components/schemas/Activity:jsonld-write'
        stages:
          description: 'The stages of this test'
          type: array
          items:
            $ref: '#/components/schemas/Stage:jsonld-write'
definitions:
  Activity-read:
    properties:
      id:
        description: 'The UUID identifier of this Activity.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Activity.'
        type: string
        example: Activity1
        maxLength: 255
      description:
        description: 'The description of this Activity.'
        type: string
        example: 'Beschrijving van Activity1.'
        maxLength: 255
      needsReview:
        description: 'Denotes if this activity needs a review with a rating before it can be completed.'
        type: bool
        example: 'true'
      educationalUse: []
      dateCreated:
        description: 'The moment this Activity was created'
        type: \Datetime
      dateModified:
        description: 'The moment this Activity was last Modified'
        type: \Datetime
      course: []
      results: []
      tests: []
    required:
      - name
  Activity-write:
    properties:
      name:
        description: 'The name of this Activity.'
        type: string
        example: Activity1
        maxLength: 255
      description:
        description: 'The description of this Activity.'
        type: string
        example: 'Beschrijving van Activity1.'
        maxLength: 255
      needsReview:
        description: 'Denotes if this activity needs a review with a rating before it can be completed.'
        type: bool
        example: 'true'
      educationalUse: []
      course: []
      results: []
      tests: []
    required:
      - name
  Course-read:
    properties:
      id:
        description: 'The UUID identifier of this Course.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Course.'
        type: string
        example: 'Werken met scrum en Github'
        maxLength: 255
      organization:
        description: 'The uri of the submitter (organization)'
        type: string
        example: 'https://dev.zuid-drecht.nl/api/v1/wrc/organizations/c571bdad-f34c-4e24-94e7-74629cfaccc9'
        format: url
        maxLength: 255
      description:
        description: 'The description of this Course.'
        type: string
        example: 'Deze cursus leert je de basics van werken met scrum en Github.'
        maxLength: 255
      text:
        description: 'The actual content of this Course.'
        type: string
        example: 'Github is echt awsome'
      courseCode:
        description: 'The courseCode of this Course.'
        type: string
        example: SG123
        maxLength: 255
      coursePrerequisites:
        description: 'The coursePrerequisites of this Course.'
        type: array
      hasCourseInstance:
        description: 'An instance of a Course which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.'
        type: string
        example: 'https://edu.conduction.nl/courses'
        maxLength: 255
      numberOfCredits:
        description: 'The numberOfCredits of this Course.'
        type: int
        example: '5'
      occupationalCredentialAwarded:
        description: 'A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.'
        type: string
        example: 'Beschrijving van wat je krijgt bij het halen van deze cursus, bijvoorbeeld een certificaat.'
        maxLength: 255
      educationalCredentialAwarded:
        description: 'A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.'
        type: string
        example: 'Beschrijving van wat je krijgt bij het halen van deze cursus, bijvoorbeeld een certificaat.'
        maxLength: 255
      dateCreated:
        description: 'The moment this Course was created'
        type: \Datetime
      dateModified:
        description: 'The moment this Course was last Modified'
        type: \Datetime
      skills:
        description: 'An array of URLs pointing to skills related to this course'
        type: array
      competences:
        description: 'An array of URLs pointing to competences this course teaches the participant'
        type: array
      products:
        description: 'An array of URLs pointing to products from the pdc related to this course'
        type: array
      additionalType:
        description: 'The Type of this course.'
        type: string
        example: 'Elearning, Readthrough, Skilltest.'
        maxLength: 255
      video:
        description: 'The url linking to a video which belongs to this course'
        type: string
        example: 'https://dev.zuid-drecht.nl/api/v1/wrc/organizations/c571bdad-f34c-4e24-94e7-74629cfaccc9'
        format: url
        maxLength: 255
      timeRequired:
        description: 'The time Required to complete this Course.'
        type: string
        example: 'Deze cursus leert je de basics van werken met scrum en Github. Based on schema.org'
        maxLength: 255
      results: []
      programs: []
      educationEvents: []
      activities: []
    required:
      - name
      - organization
  Course-write:
    properties:
      name:
        description: 'The name of this Course.'
        type: string
        example: 'Werken met scrum en Github'
        maxLength: 255
      organization:
        description: 'The uri of the submitter (organization)'
        type: string
        example: 'https://dev.zuid-drecht.nl/api/v1/wrc/organizations/c571bdad-f34c-4e24-94e7-74629cfaccc9'
        format: url
        maxLength: 255
      description:
        description: 'The description of this Course.'
        type: string
        example: 'Deze cursus leert je de basics van werken met scrum en Github.'
        maxLength: 255
      text:
        description: 'The actual content of this Course.'
        type: string
        example: 'Github is echt awsome'
      courseCode:
        description: 'The courseCode of this Course.'
        type: string
        example: SG123
        maxLength: 255
      coursePrerequisites:
        description: 'The coursePrerequisites of this Course.'
        type: array
      hasCourseInstance:
        description: 'An instance of a Course which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.'
        type: string
        example: 'https://edu.conduction.nl/courses'
        maxLength: 255
      numberOfCredits:
        description: 'The numberOfCredits of this Course.'
        type: int
        example: '5'
      occupationalCredentialAwarded:
        description: 'A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.'
        type: string
        example: 'Beschrijving van wat je krijgt bij het halen van deze cursus, bijvoorbeeld een certificaat.'
        maxLength: 255
      educationalCredentialAwarded:
        description: 'A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.'
        type: string
        example: 'Beschrijving van wat je krijgt bij het halen van deze cursus, bijvoorbeeld een certificaat.'
        maxLength: 255
      skills:
        description: 'An array of URLs pointing to skills related to this course'
        type: array
      competences:
        description: 'An array of URLs pointing to competences this course teaches the participant'
        type: array
      products:
        description: 'An array of URLs pointing to products from the pdc related to this course'
        type: array
      additionalType:
        description: 'The Type of this course.'
        type: string
        example: 'Elearning, Readthrough, Skilltest.'
        maxLength: 255
      video:
        description: 'The url linking to a video which belongs to this course'
        type: string
        example: 'https://dev.zuid-drecht.nl/api/v1/wrc/organizations/c571bdad-f34c-4e24-94e7-74629cfaccc9'
        format: url
        maxLength: 255
      timeRequired:
        description: 'The time Required to complete this Course.'
        type: string
        example: 'Deze cursus leert je de basics van werken met scrum en Github. Based on schema.org'
        maxLength: 255
      results: []
      programs: []
      educationEvents: []
      activities: []
    required:
      - name
      - organization
  EducationEvent-read:
    properties:
      id:
        description: 'The UUID identifier of this EducationEvent.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this EducationEvent.'
        type: string
        example: 'Les 1 over Github'
        maxLength: 255
      description:
        description: 'The description of this EducationEvent.'
        type: string
        example: 'Dit is de eerste online les over Github.'
        maxLength: 255
      assesses:
        description: 'The assesses of this EducationEvent.'
        type: string
        example: beoordelingscriteria
        maxLength: 255
      educationalLevel:
        description: 'The educationalLevel of this EducationEvent.'
        type: string
        example: beginner
        maxLength: 255
      teaches:
        description: 'The teaches of this EducationEvent.'
        type: string
        example: 'In deze eerste les zal je de basics leren van Github zoals het clonen van en repository.'
        maxLength: 255
      startDate:
        description: 'The moment this EducationEvent starts.'
        type: string
        example: '2020-12-07 16:36:53'
        format: date-time
      endDate:
        description: 'The moment this EducationEvent ends.'
        type: string
        example: '2020-12-07 16:36:53'
        format: date-time
      dateCreated:
        description: 'The moment this EducationEvent was created'
        type: \Datetime
      dateModified:
        description: 'The moment this EducationEvent was last Modified'
        type: \Datetime
      course: []
    required:
      - name
  EducationEvent-write:
    properties:
      name:
        description: 'The name of this EducationEvent.'
        type: string
        example: 'Les 1 over Github'
        maxLength: 255
      description:
        description: 'The description of this EducationEvent.'
        type: string
        example: 'Dit is de eerste online les over Github.'
        maxLength: 255
      assesses:
        description: 'The assesses of this EducationEvent.'
        type: string
        example: beoordelingscriteria
        maxLength: 255
      educationalLevel:
        description: 'The educationalLevel of this EducationEvent.'
        type: string
        example: beginner
        maxLength: 255
      teaches:
        description: 'The teaches of this EducationEvent.'
        type: string
        example: 'In deze eerste les zal je de basics leren van Github zoals het clonen van en repository.'
        maxLength: 255
      startDate:
        description: 'The moment this EducationEvent starts.'
        type: string
        example: '2020-12-07 16:36:53'
        format: date-time
      endDate:
        description: 'The moment this EducationEvent ends.'
        type: string
        example: '2020-12-07 16:36:53'
        format: date-time
      course: []
    required:
      - name
  Group-read:
    properties:
      id:
        description: 'The UUID identifier of this Participant.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Group.'
        type: string
        example: A213
        maxLength: 255
      description:
        description: 'The description of this Group.'
        type: string
        example: 'Deze group werkt samen aan werken met scrum en Github.'
        maxLength: 255
      dateCreated:
        description: 'The moment this Participant was created'
        type: \Datetime
      dateModified:
        description: 'The moment this Participant was last Modified'
        type: \Datetime
      participants: []
    required:
      - name
  Group-write:
    properties:
      name:
        description: 'The name of this Group.'
        type: string
        example: A213
        maxLength: 255
      description:
        description: 'The description of this Group.'
        type: string
        example: 'Deze group werkt samen aan werken met scrum en Github.'
        maxLength: 255
      participants: []
    required:
      - name
  Participant-read:
    properties:
      id:
        description: 'The UUID identifier of this Participant.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      person:
        description: 'The contact of this Participant.'
        type: string
        example: 'https://cc.zuid-drecht.nl/people/{{uuid}]'
        maxLength: 255
      dateCreated:
        description: 'The moment this Participant was created'
        type: \Datetime
      dateModified:
        description: 'The moment this Participant was last Modified'
        type: \Datetime
      status:
        description: 'The status of this Participant.'
        type: string
        example: pending
      dateOfAcceptance:
        description: 'The date of acceptance of this Participant.'
        type: \Datetime
        example: 15-10-2020
      motivation:
        description: 'The motivation of this Participant.'
        type: string
        example: 'I love learning.'
      program: []
      course: []
      results: []
      groupColumn: []
    required:
      - person
  Participant-write:
    properties:
      person:
        description: 'The contact of this Participant.'
        type: string
        example: 'https://cc.zuid-drecht.nl/people/{{uuid}]'
        maxLength: 255
      status:
        description: 'The status of this Participant.'
        type: string
        example: pending
      dateOfAcceptance:
        description: 'The date of acceptance of this Participant.'
        type: \Datetime
        example: 15-10-2020
      motivation:
        description: 'The motivation of this Participant.'
        type: string
        example: 'I love learning.'
      program: []
      course: []
      results: []
      groupColumn: []
    required:
      - person
  Program-read:
    properties:
      id:
        description: 'The UUID identifier of this Program.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Program.'
        type: string
        example: 'associate degree informatica'
        maxLength: 255
      description:
        description: 'The description of this Program.'
        type: string
        example: 'Deze studie leert je in 2 jaar tijd informatica skills op HBO denkniveau.'
        maxLength: 255
      applicationStartDate:
        description: 'The day that people can start to apply for this Program.'
        type: string
        example: '2020-12-07 16:36:53'
        format: date-time
      applicationDeadline:
        description: 'The day that people can no longer apply for this Program.'
        type: string
        example: '2020-12-07 16:36:53'
        format: date-time
      startDate:
        description: 'The moment this Program starts.'
        type: string
        example: '2020-12-07 16:36:53'
        format: date-time
      endDate:
        description: 'The moment this Program ends.'
        type: string
        example: '2020-12-07 16:36:53'
        format: date-time
      financialAidEligible:
        description: 'The financialAidEligible of this Program.'
        type: string
        example: 'Een beschrijving of verwijzing naar een programma voor financiële steun dat studenten kunnen gebruiken om het collegegeld of de kosten voor het programma te betalen.'
        maxLength: 255
      maximumEnrollment:
        description: 'The maximum number of students who may be enrolled in the program..'
        type: int
        example: '100'
      numberOfCredits:
        description: 'The numberOfCredits of this Program.'
        type: int
        example: '120'
      occupationalCategory:
        description: 'A category describing the job, preferably using a term from a taxonomy such as BLS O*NET-SOC, ISCO-08 or similar.'
        type: string
        example: HBO
        maxLength: 255
      occupationalCredentialAwarded:
        description: 'A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.'
        type: string
        example: 'Beschrijving van wat je krijgt bij het halen van deze studie, bijvoorbeeld een diploma.'
        maxLength: 255
      educationalCredentialAwarded:
        description: 'A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.'
        type: string
        example: 'Beschrijving van wat je krijgt bij het halen van deze studie, bijvoorbeeld een diploma.'
        maxLength: 255
      educationalProgramMode:
        description: 'The educationalProgramMode of this Program.'
        type: string
        example: full-time
        maxLength: 255
      offers:
        description: 'The offers of this Program.'
        type: string
        example: 'https://pdc.conduction.nl/offers'
        maxLength: 255
      programPrerequisites:
        description: 'The programPrerequisites of this Program.'
        type: array
      programType:
        description: 'The programType of this Program.'
        type: string
        example: 'classroom, internship.'
        maxLength: 255
      provider:
        description: 'The provider of this Program.'
        type: string
        example: 'https://wrc.conduction.nl/organizations'
        maxLength: 255
      salaryUponCompletion:
        description: 'The salaryUponCompletion of this Program.'
        type: string
        example: €1000
        maxLength: 255
      termDuration:
        description: 'The termDuration of this Program.'
        type: string
        example: '2 maanden.'
        maxLength: 255
      termsPerYear:
        description: 'The termsPerYear of this Program.'
        type: int
        example: '4'
      dayOfWeek:
        description: 'The dayOfWeek of this Program.'
        type: string
        example: 'van maandag tot zaterdag.'
        maxLength: 255
      timeOfDay:
        description: 'The timeOfDay of this Program.'
        type: string
        example: 'Overdag, soms in de avond.'
        maxLength: 255
      timeToComplete:
        description: 'The timeToComplete of this Program.'
        type: string
        example: '2 jaar.'
        maxLength: 255
      trainingSalary:
        description: 'The trainingSalary of this Program.'
        type: string
        example: '€300 per maand.'
        maxLength: 255
      typicalCreditsPerTerm:
        description: 'The typicalCreditsPerTerm of this Program.'
        type: int
        example: '15'
      dateCreated:
        description: 'The moment this Program was created'
        type: \Datetime
      dateModified:
        description: 'The moment this Program was last Modified'
        type: \Datetime
      participants: []
      courses: []
      results: []
    required:
      - name
  Program-write:
    properties:
      name:
        description: 'The name of this Program.'
        type: string
        example: 'associate degree informatica'
        maxLength: 255
      description:
        description: 'The description of this Program.'
        type: string
        example: 'Deze studie leert je in 2 jaar tijd informatica skills op HBO denkniveau.'
        maxLength: 255
      applicationStartDate:
        description: 'The day that people can start to apply for this Program.'
        type: string
        example: '2020-12-07 16:36:53'
        format: date-time
      applicationDeadline:
        description: 'The day that people can no longer apply for this Program.'
        type: string
        example: '2020-12-07 16:36:53'
        format: date-time
      startDate:
        description: 'The moment this Program starts.'
        type: string
        example: '2020-12-07 16:36:53'
        format: date-time
      endDate:
        description: 'The moment this Program ends.'
        type: string
        example: '2020-12-07 16:36:53'
        format: date-time
      financialAidEligible:
        description: 'The financialAidEligible of this Program.'
        type: string
        example: 'Een beschrijving of verwijzing naar een programma voor financiële steun dat studenten kunnen gebruiken om het collegegeld of de kosten voor het programma te betalen.'
        maxLength: 255
      maximumEnrollment:
        description: 'The maximum number of students who may be enrolled in the program..'
        type: int
        example: '100'
      numberOfCredits:
        description: 'The numberOfCredits of this Program.'
        type: int
        example: '120'
      occupationalCategory:
        description: 'A category describing the job, preferably using a term from a taxonomy such as BLS O*NET-SOC, ISCO-08 or similar.'
        type: string
        example: HBO
        maxLength: 255
      occupationalCredentialAwarded:
        description: 'A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.'
        type: string
        example: 'Beschrijving van wat je krijgt bij het halen van deze studie, bijvoorbeeld een diploma.'
        maxLength: 255
      educationalCredentialAwarded:
        description: 'A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.'
        type: string
        example: 'Beschrijving van wat je krijgt bij het halen van deze studie, bijvoorbeeld een diploma.'
        maxLength: 255
      educationalProgramMode:
        description: 'The educationalProgramMode of this Program.'
        type: string
        example: full-time
        maxLength: 255
      offers:
        description: 'The offers of this Program.'
        type: string
        example: 'https://pdc.conduction.nl/offers'
        maxLength: 255
      programPrerequisites:
        description: 'The programPrerequisites of this Program.'
        type: array
      programType:
        description: 'The programType of this Program.'
        type: string
        example: 'classroom, internship.'
        maxLength: 255
      provider:
        description: 'The provider of this Program.'
        type: string
        example: 'https://wrc.conduction.nl/organizations'
        maxLength: 255
      salaryUponCompletion:
        description: 'The salaryUponCompletion of this Program.'
        type: string
        example: €1000
        maxLength: 255
      termDuration:
        description: 'The termDuration of this Program.'
        type: string
        example: '2 maanden.'
        maxLength: 255
      termsPerYear:
        description: 'The termsPerYear of this Program.'
        type: int
        example: '4'
      dayOfWeek:
        description: 'The dayOfWeek of this Program.'
        type: string
        example: 'van maandag tot zaterdag.'
        maxLength: 255
      timeOfDay:
        description: 'The timeOfDay of this Program.'
        type: string
        example: 'Overdag, soms in de avond.'
        maxLength: 255
      timeToComplete:
        description: 'The timeToComplete of this Program.'
        type: string
        example: '2 jaar.'
        maxLength: 255
      trainingSalary:
        description: 'The trainingSalary of this Program.'
        type: string
        example: '€300 per maand.'
        maxLength: 255
      typicalCreditsPerTerm:
        description: 'The typicalCreditsPerTerm of this Program.'
        type: int
        example: '15'
      participants: []
      courses: []
      results: []
    required:
      - name
  Question-read:
    properties:
      id:
        description: 'The UUID identifier of this Question.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Question.'
        type: string
        example: Question1
        maxLength: 255
      description:
        description: 'The Question.'
        type: string
        example: 'Is dit een vraag?'
        maxLength: 255
      dateCreated:
        description: 'The moment this Question was created'
        type: \Datetime
      dateModified:
        description: 'The moment this Question was last Modified'
        type: \Datetime
      answer:
        description: 'The Answer to this Question.'
        type: string
        example: 'Dit is het antwoord.'
        maxLength: 255
      answerOptions:
        description: 'The answerOptions of this Question.'
        type: array
      orderNumber:
        description: 'The place in the order where the question should be rendered'
        type: int
      stage:
        description: 'the stage this stage belongs to'
        type: \Stage
    required:
      - name
      - description
      - answer
      - orderNumber
  Question-write:
    properties:
      name:
        description: 'The name of this Question.'
        type: string
        example: Question1
        maxLength: 255
      description:
        description: 'The Question.'
        type: string
        example: 'Is dit een vraag?'
        maxLength: 255
      answer:
        description: 'The Answer to this Question.'
        type: string
        example: 'Dit is het antwoord.'
        maxLength: 255
      answerOptions:
        description: 'The answerOptions of this Question.'
        type: array
      orderNumber:
        description: 'The place in the order where the question should be rendered'
        type: int
      stage:
        description: 'the stage this stage belongs to'
        type: \Stage
    required:
      - name
      - description
      - answer
      - orderNumber
  Result-read:
    properties:
      id:
        description: 'The UUID identifier of this Result.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Result.'
        type: string
        example: Result1
        maxLength: 255
      description:
        description: 'The description of this Result.'
        type: string
        example: 'Beschrijving van Result1.'
        maxLength: 255
      completionDate:
        description: 'The moment this Result had status: completed.'
        type: string
        example: '2020-12-07 16:36:53'
        format: date-time
      dateCreated:
        description: 'The moment this Result was created'
        type: \Datetime
      dateModified:
        description: 'The moment this Result was last Modified'
        type: \Datetime
      participant: []
      activity: []
      test: []
      course: []
      program: []
      reviews: []
    required:
      - name
  Result-write:
    properties:
      name:
        description: 'The name of this Result.'
        type: string
        example: Result1
        maxLength: 255
      description:
        description: 'The description of this Result.'
        type: string
        example: 'Beschrijving van Result1.'
        maxLength: 255
      completionDate:
        description: 'The moment this Result had status: completed.'
        type: string
        example: '2020-12-07 16:36:53'
        format: date-time
      participant: []
      activity: []
      test: []
      course: []
      program: []
      reviews: []
    required:
      - name
  Review-read:
    properties:
      id:
        description: 'The UUID identifier of this Review.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Review.'
        type: string
        example: Review1
        maxLength: 255
      description:
        description: 'The description of this Review.'
        type: string
        example: 'Beschrijving van Review1.'
        maxLength: 255
      body: []
      rating: []
      dateCreated:
        description: 'The moment this Review was created'
        type: \Datetime
      dateModified:
        description: 'The moment this Review was last Modified'
        type: \Datetime
      result: []
    required:
      - name
  Review-write:
    properties:
      name:
        description: 'The name of this Review.'
        type: string
        example: Review1
        maxLength: 255
      description:
        description: 'The description of this Review.'
        type: string
        example: 'Beschrijving van Review1.'
        maxLength: 255
      body: []
      rating: []
      result: []
    required:
      - name
  Stage-read:
    properties:
      id:
        description: 'The UUID identifier of this Stage.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Stage.'
        type: string
        example: Stage1
        maxLength: 255
      description:
        description: 'The description of this Stage.'
        type: string
        example: 'Beschrijving van Stage1.'
        maxLength: 255
      dateCreated:
        description: 'The moment this Stage was created'
        type: \Datetime
      dateModified:
        description: 'The moment this Stage was last Modified'
        type: \Datetime
      orderNumber:
        description: 'The place in the order where the stage should be rendered'
        type: int
      test:
        description: 'The test that this stage belongs to'
        type: \Test
      questions:
        description: 'the questions of this stage'
        type: \ArrayCollection
    required:
      - name
      - orderNumber
  Stage-write:
    properties:
      name:
        description: 'The name of this Stage.'
        type: string
        example: Stage1
        maxLength: 255
      description:
        description: 'The description of this Stage.'
        type: string
        example: 'Beschrijving van Stage1.'
        maxLength: 255
      orderNumber:
        description: 'The place in the order where the stage should be rendered'
        type: int
      test:
        description: 'The test that this stage belongs to'
        type: \Test
      questions:
        description: 'the questions of this stage'
        type: \ArrayCollection
    required:
      - name
      - orderNumber
  Test-read:
    properties:
      id:
        description: 'The UUID identifier of this Test.'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this Test.'
        type: string
        example: Test1
        maxLength: 255
      description:
        description: 'The description of this Test.'
        type: string
        example: 'Beschrijving van Test1.'
        maxLength: 255
      needsReview:
        description: 'Denotes if this test needs a review with a rating before it can be completed.'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this Test was created'
        type: \Datetime
      dateModified:
        description: 'The moment this Test was last Modified'
        type: \Datetime
      results: []
      activity:
        description: 'The activity that this test belongs to'
        type: \Activity
      stages:
        description: 'The stages of this test'
        type: array
    required:
      - name
  Test-write:
    properties:
      name:
        description: 'The name of this Test.'
        type: string
        example: Test1
        maxLength: 255
      description:
        description: 'The description of this Test.'
        type: string
        example: 'Beschrijving van Test1.'
        maxLength: 255
      needsReview:
        description: 'Denotes if this test needs a review with a rating before it can be completed.'
        type: bool
        example: 'true'
      results: []
      activity:
        description: 'The activity that this test belongs to'
        type: \Activity
      stages:
        description: 'The stages of this test'
        type: array
    required:
      - name
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-12-07 16:36:53'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-12-07 16:36:53'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2020-12-07 16:36:53'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2020-12-07 16:36:53'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: Activity
    description: |
      An activity like a class on a cource.
      
      
  -
    name: Course
    description: |
      A Course is a course within a program in which participants can participate. Based on https://schema.org/Course.
      
      
  -
    name: EducationEvent
    description: |
      An EducationEvent is a (online) meeting, college etc. of a course.
      
      
  -
    name: Group
    description: |
      An activity like a class on a cource.
      
      
  -
    name: Participant
    description: |
      A Participant is a person who participates in a Course or an Program.
      
      
  -
    name: Program
    description: |
      A Program is a EducationalOccupationalProgram offered by an institution which determines the learning progress to achieve an outcome, usually a credential like a degree or certificate. Based on https://schema.org/EducationalOccupationalProgram.
      
      
  -
    name: Question
    description: |
      
      
      
  -
    name: Result
    description: |
      
      
      
  -
    name: Review
    description: |
      
      
      
  -
    name: Stage
    description: |
      A stage within a test.
      
      
  -
    name: Test
    description: |
      
      
      
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
host: irc.zaakonline.nl
servers:
  -
    name: zuid-drecht.nl
    url: edu.dev.zuid-drecht.nl
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
